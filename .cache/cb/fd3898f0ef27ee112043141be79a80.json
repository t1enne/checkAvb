{"id":"../node_modules/mithril/pathname/parse.js","dependencies":[{"name":"/home/ntaov/Documents/code/checkAvb/package.json","includedInParent":true,"mtime":1618151268946},{"name":"/home/ntaov/Documents/code/checkAvb/node_modules/mithril/package.json","includedInParent":true,"mtime":1618151149217},{"name":"../querystring/parse","loc":{"line":3,"column":31},"parent":"/home/ntaov/Documents/code/checkAvb/node_modules/mithril/pathname/parse.js","resolved":"/home/ntaov/Documents/code/checkAvb/node_modules/mithril/querystring/parse.js"}],"generated":{"js":"\"use strict\"\n\nvar parseQueryString = require(\"../querystring/parse\")\n\n// Returns `{path, params}` from `url`\nmodule.exports = function(url) {\n\tvar queryIndex = url.indexOf(\"?\")\n\tvar hashIndex = url.indexOf(\"#\")\n\tvar queryEnd = hashIndex < 0 ? url.length : hashIndex\n\tvar pathEnd = queryIndex < 0 ? queryEnd : queryIndex\n\tvar path = url.slice(0, pathEnd).replace(/\\/{2,}/g, \"/\")\n\n\tif (!path) path = \"/\"\n\telse {\n\t\tif (path[0] !== \"/\") path = \"/\" + path\n\t\tif (path.length > 1 && path[path.length - 1] === \"/\") path = path.slice(0, -1)\n\t}\n\treturn {\n\t\tpath: path,\n\t\tparams: queryIndex < 0\n\t\t\t? {}\n\t\t\t: parseQueryString(url.slice(queryIndex + 1, queryEnd)),\n\t}\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}}],"sources":{"../node_modules/mithril/pathname/parse.js":"\"use strict\"\n\nvar parseQueryString = require(\"../querystring/parse\")\n\n// Returns `{path, params}` from `url`\nmodule.exports = function(url) {\n\tvar queryIndex = url.indexOf(\"?\")\n\tvar hashIndex = url.indexOf(\"#\")\n\tvar queryEnd = hashIndex < 0 ? url.length : hashIndex\n\tvar pathEnd = queryIndex < 0 ? queryEnd : queryIndex\n\tvar path = url.slice(0, pathEnd).replace(/\\/{2,}/g, \"/\")\n\n\tif (!path) path = \"/\"\n\telse {\n\t\tif (path[0] !== \"/\") path = \"/\" + path\n\t\tif (path.length > 1 && path[path.length - 1] === \"/\") path = path.slice(0, -1)\n\t}\n\treturn {\n\t\tpath: path,\n\t\tparams: queryIndex < 0\n\t\t\t? {}\n\t\t\t: parseQueryString(url.slice(queryIndex + 1, queryEnd)),\n\t}\n}\n"},"lineCount":25}},"error":null,"hash":"bad30355ad277b989f2ec90b2a46d67d","cacheData":{"env":{}}}