{"id":"node_modules/nth-check/compile.js","dependencies":[{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\package.json","includedInParent":true,"mtime":1602529800556},{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\nth-check\\package.json","includedInParent":true,"mtime":1602527411018},{"name":"boolbase","loc":{"line":3,"column":24},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\nth-check\\compile.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\boolbase\\index.js"}],"generated":{"js":"module.exports = compile;\r\n\r\nvar BaseFuncs = require(\"boolbase\"),\r\n    trueFunc  = BaseFuncs.trueFunc,\r\n    falseFunc = BaseFuncs.falseFunc;\r\n\r\n/*\r\n\treturns a function that checks if an elements index matches the given rule\r\n\thighly optimized to return the fastest solution\r\n*/\r\nfunction compile(parsed){\r\n\tvar a = parsed[0],\r\n\t    b = parsed[1] - 1;\r\n\r\n\t//when b <= 0, a*n won't be possible for any matches when a < 0\r\n\t//besides, the specification says that no element is matched when a and b are 0\r\n\tif(b < 0 && a <= 0) return falseFunc;\r\n\r\n\t//when a is in the range -1..1, it matches any element (so only b is checked)\r\n\tif(a ===-1) return function(pos){ return pos <= b; };\r\n\tif(a === 0) return function(pos){ return pos === b; };\r\n\t//when b <= 0 and a === 1, they match any element\r\n\tif(a === 1) return b < 0 ? trueFunc : function(pos){ return pos >= b; };\r\n\r\n\t//when a > 0, modulo can be used to check if there is a match\r\n\tvar bMod = b % a;\r\n\tif(bMod < 0) bMod += a;\r\n\r\n\tif(a > 1){\r\n\t\treturn function(pos){\r\n\t\t\treturn pos >= b && pos % a === bMod;\r\n\t\t};\r\n\t}\r\n\r\n\ta *= -1; //make `a` positive\r\n\r\n\treturn function(pos){\r\n\t\treturn pos <= b && pos % a === bMod;\r\n\t};\r\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/nth-check/compile.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/nth-check/compile.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}}],"sources":{"node_modules/nth-check/compile.js":"module.exports = compile;\r\n\r\nvar BaseFuncs = require(\"boolbase\"),\r\n    trueFunc  = BaseFuncs.trueFunc,\r\n    falseFunc = BaseFuncs.falseFunc;\r\n\r\n/*\r\n\treturns a function that checks if an elements index matches the given rule\r\n\thighly optimized to return the fastest solution\r\n*/\r\nfunction compile(parsed){\r\n\tvar a = parsed[0],\r\n\t    b = parsed[1] - 1;\r\n\r\n\t//when b <= 0, a*n won't be possible for any matches when a < 0\r\n\t//besides, the specification says that no element is matched when a and b are 0\r\n\tif(b < 0 && a <= 0) return falseFunc;\r\n\r\n\t//when a is in the range -1..1, it matches any element (so only b is checked)\r\n\tif(a ===-1) return function(pos){ return pos <= b; };\r\n\tif(a === 0) return function(pos){ return pos === b; };\r\n\t//when b <= 0 and a === 1, they match any element\r\n\tif(a === 1) return b < 0 ? trueFunc : function(pos){ return pos >= b; };\r\n\r\n\t//when a > 0, modulo can be used to check if there is a match\r\n\tvar bMod = b % a;\r\n\tif(bMod < 0) bMod += a;\r\n\r\n\tif(a > 1){\r\n\t\treturn function(pos){\r\n\t\t\treturn pos >= b && pos % a === bMod;\r\n\t\t};\r\n\t}\r\n\r\n\ta *= -1; //make `a` positive\r\n\r\n\treturn function(pos){\r\n\t\treturn pos <= b && pos % a === bMod;\r\n\t};\r\n}"},"lineCount":40}},"error":null,"hash":"856f2036a5c7e1407a7b1684bc35f3db","cacheData":{"env":{}}}