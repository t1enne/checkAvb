{"id":"../node_modules/mithril/pathname/parse.js","dependencies":[{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\package.json","includedInParent":true,"mtime":1608812877417},{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\mithril\\package.json","includedInParent":true,"mtime":1607632000077},{"name":"../querystring/parse","loc":{"line":3,"column":31},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\mithril\\pathname\\parse.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\mithril\\querystring\\parse.js"}],"generated":{"js":"\"use strict\"\r\n\r\nvar parseQueryString = require(\"../querystring/parse\")\r\n\r\n// Returns `{path, params}` from `url`\r\nmodule.exports = function(url) {\r\n\tvar queryIndex = url.indexOf(\"?\")\r\n\tvar hashIndex = url.indexOf(\"#\")\r\n\tvar queryEnd = hashIndex < 0 ? url.length : hashIndex\r\n\tvar pathEnd = queryIndex < 0 ? queryEnd : queryIndex\r\n\tvar path = url.slice(0, pathEnd).replace(/\\/{2,}/g, \"/\")\r\n\r\n\tif (!path) path = \"/\"\r\n\telse {\r\n\t\tif (path[0] !== \"/\") path = \"/\" + path\r\n\t\tif (path.length > 1 && path[path.length - 1] === \"/\") path = path.slice(0, -1)\r\n\t}\r\n\treturn {\r\n\t\tpath: path,\r\n\t\tparams: queryIndex < 0\r\n\t\t\t? {}\r\n\t\t\t: parseQueryString(url.slice(queryIndex + 1, queryEnd)),\r\n\t}\r\n}\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mithril/pathname/parse.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}}],"sources":{"../node_modules/mithril/pathname/parse.js":"\"use strict\"\r\n\r\nvar parseQueryString = require(\"../querystring/parse\")\r\n\r\n// Returns `{path, params}` from `url`\r\nmodule.exports = function(url) {\r\n\tvar queryIndex = url.indexOf(\"?\")\r\n\tvar hashIndex = url.indexOf(\"#\")\r\n\tvar queryEnd = hashIndex < 0 ? url.length : hashIndex\r\n\tvar pathEnd = queryIndex < 0 ? queryEnd : queryIndex\r\n\tvar path = url.slice(0, pathEnd).replace(/\\/{2,}/g, \"/\")\r\n\r\n\tif (!path) path = \"/\"\r\n\telse {\r\n\t\tif (path[0] !== \"/\") path = \"/\" + path\r\n\t\tif (path.length > 1 && path[path.length - 1] === \"/\") path = path.slice(0, -1)\r\n\t}\r\n\treturn {\r\n\t\tpath: path,\r\n\t\tparams: queryIndex < 0\r\n\t\t\t? {}\r\n\t\t\t: parseQueryString(url.slice(queryIndex + 1, queryEnd)),\r\n\t}\r\n}\r\n"},"lineCount":25}},"error":null,"hash":"a1fde3b8e3e8e7b68d728bbaa5a96081","cacheData":{"env":{}}}