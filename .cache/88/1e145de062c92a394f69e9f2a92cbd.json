{"id":"node_modules/merge-descriptors/index.js","dependencies":[{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\package.json","includedInParent":true,"mtime":1602529800556},{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\merge-descriptors\\package.json","includedInParent":true,"mtime":1602527410922}],"generated":{"js":"/*!\r\n * merge-descriptors\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = merge\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty\r\n\r\n/**\r\n * Merge the property descriptors of `src` into `dest`\r\n *\r\n * @param {object} dest Object to add descriptors to\r\n * @param {object} src Object to clone descriptors from\r\n * @param {boolean} [redefine=true] Redefine `dest` properties with `src` properties\r\n * @returns {object} Reference to dest\r\n * @public\r\n */\r\n\r\nfunction merge(dest, src, redefine) {\r\n  if (!dest) {\r\n    throw new TypeError('argument dest is required')\r\n  }\r\n\r\n  if (!src) {\r\n    throw new TypeError('argument src is required')\r\n  }\r\n\r\n  if (redefine === undefined) {\r\n    // Default to true\r\n    redefine = true\r\n  }\r\n\r\n  Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName(name) {\r\n    if (!redefine && hasOwnProperty.call(dest, name)) {\r\n      // Skip desriptor\r\n      return\r\n    }\r\n\r\n    // Copy descriptor\r\n    var descriptor = Object.getOwnPropertyDescriptor(src, name)\r\n    Object.defineProperty(dest, name, descriptor)\r\n  })\r\n\r\n  return dest\r\n}\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/merge-descriptors/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/merge-descriptors/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}}],"sources":{"node_modules/merge-descriptors/index.js":"/*!\r\n * merge-descriptors\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = merge\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty\r\n\r\n/**\r\n * Merge the property descriptors of `src` into `dest`\r\n *\r\n * @param {object} dest Object to add descriptors to\r\n * @param {object} src Object to clone descriptors from\r\n * @param {boolean} [redefine=true] Redefine `dest` properties with `src` properties\r\n * @returns {object} Reference to dest\r\n * @public\r\n */\r\n\r\nfunction merge(dest, src, redefine) {\r\n  if (!dest) {\r\n    throw new TypeError('argument dest is required')\r\n  }\r\n\r\n  if (!src) {\r\n    throw new TypeError('argument src is required')\r\n  }\r\n\r\n  if (redefine === undefined) {\r\n    // Default to true\r\n    redefine = true\r\n  }\r\n\r\n  Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName(name) {\r\n    if (!redefine && hasOwnProperty.call(dest, name)) {\r\n      // Skip desriptor\r\n      return\r\n    }\r\n\r\n    // Copy descriptor\r\n    var descriptor = Object.getOwnPropertyDescriptor(src, name)\r\n    Object.defineProperty(dest, name, descriptor)\r\n  })\r\n\r\n  return dest\r\n}\r\n"},"lineCount":61}},"error":null,"hash":"5de19552a1d0fb2c5f43a653a5bd2ff4","cacheData":{"env":{}}}