{"id":"node_modules/lodash/_createWrap.js","dependencies":[{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\package.json","includedInParent":true,"mtime":1602529800556},{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1602527410817},{"name":"./_baseSetData","loc":{"line":1,"column":26},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_createWrap.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_baseSetData.js"},{"name":"./_createBind","loc":{"line":2,"column":25},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_createWrap.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_createBind.js"},{"name":"./_createCurry","loc":{"line":3,"column":26},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_createWrap.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_createCurry.js"},{"name":"./_createHybrid","loc":{"line":4,"column":27},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_createWrap.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_createHybrid.js"},{"name":"./_createPartial","loc":{"line":5,"column":28},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_createWrap.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_createPartial.js"},{"name":"./_getData","loc":{"line":6,"column":22},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_createWrap.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_getData.js"},{"name":"./_mergeData","loc":{"line":7,"column":24},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_createWrap.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_mergeData.js"},{"name":"./_setData","loc":{"line":8,"column":22},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_createWrap.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_setData.js"},{"name":"./_setWrapToString","loc":{"line":9,"column":30},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_createWrap.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_setWrapToString.js"},{"name":"./toInteger","loc":{"line":10,"column":24},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_createWrap.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\toInteger.js"}],"generated":{"js":"var baseSetData = require('./_baseSetData'),\r\n    createBind = require('./_createBind'),\r\n    createCurry = require('./_createCurry'),\r\n    createHybrid = require('./_createHybrid'),\r\n    createPartial = require('./_createPartial'),\r\n    getData = require('./_getData'),\r\n    mergeData = require('./_mergeData'),\r\n    setData = require('./_setData'),\r\n    setWrapToString = require('./_setWrapToString'),\r\n    toInteger = require('./toInteger');\r\n\r\n/** Error message constants. */\r\nvar FUNC_ERROR_TEXT = 'Expected a function';\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_BIND_FLAG = 1,\r\n    WRAP_BIND_KEY_FLAG = 2,\r\n    WRAP_CURRY_FLAG = 8,\r\n    WRAP_CURRY_RIGHT_FLAG = 16,\r\n    WRAP_PARTIAL_FLAG = 32,\r\n    WRAP_PARTIAL_RIGHT_FLAG = 64;\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max;\r\n\r\n/**\r\n * Creates a function that either curries or invokes `func` with optional\r\n * `this` binding and partially applied arguments.\r\n *\r\n * @private\r\n * @param {Function|string} func The function or method name to wrap.\r\n * @param {number} bitmask The bitmask flags.\r\n *    1 - `_.bind`\r\n *    2 - `_.bindKey`\r\n *    4 - `_.curry` or `_.curryRight` of a bound function\r\n *    8 - `_.curry`\r\n *   16 - `_.curryRight`\r\n *   32 - `_.partial`\r\n *   64 - `_.partialRight`\r\n *  128 - `_.rearg`\r\n *  256 - `_.ary`\r\n *  512 - `_.flip`\r\n * @param {*} [thisArg] The `this` binding of `func`.\r\n * @param {Array} [partials] The arguments to be partially applied.\r\n * @param {Array} [holders] The `partials` placeholder indexes.\r\n * @param {Array} [argPos] The argument positions of the new function.\r\n * @param {number} [ary] The arity cap of `func`.\r\n * @param {number} [arity] The arity of `func`.\r\n * @returns {Function} Returns the new wrapped function.\r\n */\r\nfunction createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\r\n  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\r\n  if (!isBindKey && typeof func != 'function') {\r\n    throw new TypeError(FUNC_ERROR_TEXT);\r\n  }\r\n  var length = partials ? partials.length : 0;\r\n  if (!length) {\r\n    bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\r\n    partials = holders = undefined;\r\n  }\r\n  ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\r\n  arity = arity === undefined ? arity : toInteger(arity);\r\n  length -= holders ? holders.length : 0;\r\n\r\n  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\r\n    var partialsRight = partials,\r\n        holdersRight = holders;\r\n\r\n    partials = holders = undefined;\r\n  }\r\n  var data = isBindKey ? undefined : getData(func);\r\n\r\n  var newData = [\r\n    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\r\n    argPos, ary, arity\r\n  ];\r\n\r\n  if (data) {\r\n    mergeData(newData, data);\r\n  }\r\n  func = newData[0];\r\n  bitmask = newData[1];\r\n  thisArg = newData[2];\r\n  partials = newData[3];\r\n  holders = newData[4];\r\n  arity = newData[9] = newData[9] === undefined\r\n    ? (isBindKey ? 0 : func.length)\r\n    : nativeMax(newData[9] - length, 0);\r\n\r\n  if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\r\n    bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\r\n  }\r\n  if (!bitmask || bitmask == WRAP_BIND_FLAG) {\r\n    var result = createBind(func, bitmask, thisArg);\r\n  } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\r\n    result = createCurry(func, bitmask, arity);\r\n  } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\r\n    result = createPartial(func, bitmask, thisArg, partials);\r\n  } else {\r\n    result = createHybrid.apply(undefined, newData);\r\n  }\r\n  var setter = data ? baseSetData : setData;\r\n  return setWrapToString(setter(result, newData), func, bitmask);\r\n}\r\n\r\nmodule.exports = createWrap;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/lodash/_createWrap.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/lodash/_createWrap.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}}],"sources":{"node_modules/lodash/_createWrap.js":"var baseSetData = require('./_baseSetData'),\r\n    createBind = require('./_createBind'),\r\n    createCurry = require('./_createCurry'),\r\n    createHybrid = require('./_createHybrid'),\r\n    createPartial = require('./_createPartial'),\r\n    getData = require('./_getData'),\r\n    mergeData = require('./_mergeData'),\r\n    setData = require('./_setData'),\r\n    setWrapToString = require('./_setWrapToString'),\r\n    toInteger = require('./toInteger');\r\n\r\n/** Error message constants. */\r\nvar FUNC_ERROR_TEXT = 'Expected a function';\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_BIND_FLAG = 1,\r\n    WRAP_BIND_KEY_FLAG = 2,\r\n    WRAP_CURRY_FLAG = 8,\r\n    WRAP_CURRY_RIGHT_FLAG = 16,\r\n    WRAP_PARTIAL_FLAG = 32,\r\n    WRAP_PARTIAL_RIGHT_FLAG = 64;\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max;\r\n\r\n/**\r\n * Creates a function that either curries or invokes `func` with optional\r\n * `this` binding and partially applied arguments.\r\n *\r\n * @private\r\n * @param {Function|string} func The function or method name to wrap.\r\n * @param {number} bitmask The bitmask flags.\r\n *    1 - `_.bind`\r\n *    2 - `_.bindKey`\r\n *    4 - `_.curry` or `_.curryRight` of a bound function\r\n *    8 - `_.curry`\r\n *   16 - `_.curryRight`\r\n *   32 - `_.partial`\r\n *   64 - `_.partialRight`\r\n *  128 - `_.rearg`\r\n *  256 - `_.ary`\r\n *  512 - `_.flip`\r\n * @param {*} [thisArg] The `this` binding of `func`.\r\n * @param {Array} [partials] The arguments to be partially applied.\r\n * @param {Array} [holders] The `partials` placeholder indexes.\r\n * @param {Array} [argPos] The argument positions of the new function.\r\n * @param {number} [ary] The arity cap of `func`.\r\n * @param {number} [arity] The arity of `func`.\r\n * @returns {Function} Returns the new wrapped function.\r\n */\r\nfunction createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\r\n  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\r\n  if (!isBindKey && typeof func != 'function') {\r\n    throw new TypeError(FUNC_ERROR_TEXT);\r\n  }\r\n  var length = partials ? partials.length : 0;\r\n  if (!length) {\r\n    bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\r\n    partials = holders = undefined;\r\n  }\r\n  ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\r\n  arity = arity === undefined ? arity : toInteger(arity);\r\n  length -= holders ? holders.length : 0;\r\n\r\n  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\r\n    var partialsRight = partials,\r\n        holdersRight = holders;\r\n\r\n    partials = holders = undefined;\r\n  }\r\n  var data = isBindKey ? undefined : getData(func);\r\n\r\n  var newData = [\r\n    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\r\n    argPos, ary, arity\r\n  ];\r\n\r\n  if (data) {\r\n    mergeData(newData, data);\r\n  }\r\n  func = newData[0];\r\n  bitmask = newData[1];\r\n  thisArg = newData[2];\r\n  partials = newData[3];\r\n  holders = newData[4];\r\n  arity = newData[9] = newData[9] === undefined\r\n    ? (isBindKey ? 0 : func.length)\r\n    : nativeMax(newData[9] - length, 0);\r\n\r\n  if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\r\n    bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\r\n  }\r\n  if (!bitmask || bitmask == WRAP_BIND_FLAG) {\r\n    var result = createBind(func, bitmask, thisArg);\r\n  } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\r\n    result = createCurry(func, bitmask, arity);\r\n  } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\r\n    result = createPartial(func, bitmask, thisArg, partials);\r\n  } else {\r\n    result = createHybrid.apply(undefined, newData);\r\n  }\r\n  var setter = data ? baseSetData : setData;\r\n  return setWrapToString(setter(result, newData), func, bitmask);\r\n}\r\n\r\nmodule.exports = createWrap;\r\n"},"lineCount":107}},"error":null,"hash":"ba608ccd4bc31816080a377bd2202ba9","cacheData":{"env":{}}}