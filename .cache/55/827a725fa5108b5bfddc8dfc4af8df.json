{"id":"node_modules/lodash/_createPartial.js","dependencies":[{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\package.json","includedInParent":true,"mtime":1602529800556},{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1602527410817},{"name":"./_apply","loc":{"line":1,"column":20},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_createPartial.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_apply.js"},{"name":"./_createCtor","loc":{"line":2,"column":25},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_createPartial.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_createCtor.js"},{"name":"./_root","loc":{"line":3,"column":19},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_createPartial.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_root.js"}],"generated":{"js":"var apply = require('./_apply'),\r\n    createCtor = require('./_createCtor'),\r\n    root = require('./_root');\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_BIND_FLAG = 1;\r\n\r\n/**\r\n * Creates a function that wraps `func` to invoke it with the `this` binding\r\n * of `thisArg` and `partials` prepended to the arguments it receives.\r\n *\r\n * @private\r\n * @param {Function} func The function to wrap.\r\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\r\n * @param {*} thisArg The `this` binding of `func`.\r\n * @param {Array} partials The arguments to prepend to those provided to\r\n *  the new function.\r\n * @returns {Function} Returns the new wrapped function.\r\n */\r\nfunction createPartial(func, bitmask, thisArg, partials) {\r\n  var isBind = bitmask & WRAP_BIND_FLAG,\r\n      Ctor = createCtor(func);\r\n\r\n  function wrapper() {\r\n    var argsIndex = -1,\r\n        argsLength = arguments.length,\r\n        leftIndex = -1,\r\n        leftLength = partials.length,\r\n        args = Array(leftLength + argsLength),\r\n        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\r\n\r\n    while (++leftIndex < leftLength) {\r\n      args[leftIndex] = partials[leftIndex];\r\n    }\r\n    while (argsLength--) {\r\n      args[leftIndex++] = arguments[++argsIndex];\r\n    }\r\n    return apply(fn, isBind ? thisArg : this, args);\r\n  }\r\n  return wrapper;\r\n}\r\n\r\nmodule.exports = createPartial;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/lodash/_createPartial.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/lodash/_createPartial.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}}],"sources":{"node_modules/lodash/_createPartial.js":"var apply = require('./_apply'),\r\n    createCtor = require('./_createCtor'),\r\n    root = require('./_root');\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_BIND_FLAG = 1;\r\n\r\n/**\r\n * Creates a function that wraps `func` to invoke it with the `this` binding\r\n * of `thisArg` and `partials` prepended to the arguments it receives.\r\n *\r\n * @private\r\n * @param {Function} func The function to wrap.\r\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\r\n * @param {*} thisArg The `this` binding of `func`.\r\n * @param {Array} partials The arguments to prepend to those provided to\r\n *  the new function.\r\n * @returns {Function} Returns the new wrapped function.\r\n */\r\nfunction createPartial(func, bitmask, thisArg, partials) {\r\n  var isBind = bitmask & WRAP_BIND_FLAG,\r\n      Ctor = createCtor(func);\r\n\r\n  function wrapper() {\r\n    var argsIndex = -1,\r\n        argsLength = arguments.length,\r\n        leftIndex = -1,\r\n        leftLength = partials.length,\r\n        args = Array(leftLength + argsLength),\r\n        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\r\n\r\n    while (++leftIndex < leftLength) {\r\n      args[leftIndex] = partials[leftIndex];\r\n    }\r\n    while (argsLength--) {\r\n      args[leftIndex++] = arguments[++argsIndex];\r\n    }\r\n    return apply(fn, isBind ? thisArg : this, args);\r\n  }\r\n  return wrapper;\r\n}\r\n\r\nmodule.exports = createPartial;\r\n"},"lineCount":44}},"error":null,"hash":"5af227cbacca96220b48a6133243dd74","cacheData":{"env":{}}}