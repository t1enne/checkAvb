{"id":"node_modules/lodash/_createBaseEach.js","dependencies":[{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\package.json","includedInParent":true,"mtime":1602529800556},{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1602527410817},{"name":"./isArrayLike","loc":{"line":1,"column":26},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_createBaseEach.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\isArrayLike.js"}],"generated":{"js":"var isArrayLike = require('./isArrayLike');\r\n\r\n/**\r\n * Creates a `baseEach` or `baseEachRight` function.\r\n *\r\n * @private\r\n * @param {Function} eachFunc The function to iterate over a collection.\r\n * @param {boolean} [fromRight] Specify iterating from right to left.\r\n * @returns {Function} Returns the new base function.\r\n */\r\nfunction createBaseEach(eachFunc, fromRight) {\r\n  return function(collection, iteratee) {\r\n    if (collection == null) {\r\n      return collection;\r\n    }\r\n    if (!isArrayLike(collection)) {\r\n      return eachFunc(collection, iteratee);\r\n    }\r\n    var length = collection.length,\r\n        index = fromRight ? length : -1,\r\n        iterable = Object(collection);\r\n\r\n    while ((fromRight ? index-- : ++index < length)) {\r\n      if (iteratee(iterable[index], index, iterable) === false) {\r\n        break;\r\n      }\r\n    }\r\n    return collection;\r\n  };\r\n}\r\n\r\nmodule.exports = createBaseEach;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/lodash/_createBaseEach.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}}],"sources":{"node_modules/lodash/_createBaseEach.js":"var isArrayLike = require('./isArrayLike');\r\n\r\n/**\r\n * Creates a `baseEach` or `baseEachRight` function.\r\n *\r\n * @private\r\n * @param {Function} eachFunc The function to iterate over a collection.\r\n * @param {boolean} [fromRight] Specify iterating from right to left.\r\n * @returns {Function} Returns the new base function.\r\n */\r\nfunction createBaseEach(eachFunc, fromRight) {\r\n  return function(collection, iteratee) {\r\n    if (collection == null) {\r\n      return collection;\r\n    }\r\n    if (!isArrayLike(collection)) {\r\n      return eachFunc(collection, iteratee);\r\n    }\r\n    var length = collection.length,\r\n        index = fromRight ? length : -1,\r\n        iterable = Object(collection);\r\n\r\n    while ((fromRight ? index-- : ++index < length)) {\r\n      if (iteratee(iterable[index], index, iterable) === false) {\r\n        break;\r\n      }\r\n    }\r\n    return collection;\r\n  };\r\n}\r\n\r\nmodule.exports = createBaseEach;\r\n"},"lineCount":33}},"error":null,"hash":"51ccc94c49ab65053488c06fc61dae20","cacheData":{"env":{}}}