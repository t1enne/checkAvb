{"id":"node_modules/lodash/_baseFlatten.js","dependencies":[{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\package.json","includedInParent":true,"mtime":1602529800556},{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1602527410817},{"name":"./_arrayPush","loc":{"line":1,"column":24},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_baseFlatten.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_arrayPush.js"},{"name":"./_isFlattenable","loc":{"line":2,"column":28},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_baseFlatten.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_isFlattenable.js"}],"generated":{"js":"var arrayPush = require('./_arrayPush'),\r\n    isFlattenable = require('./_isFlattenable');\r\n\r\n/**\r\n * The base implementation of `_.flatten` with support for restricting flattening.\r\n *\r\n * @private\r\n * @param {Array} array The array to flatten.\r\n * @param {number} depth The maximum recursion depth.\r\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\r\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\r\n * @param {Array} [result=[]] The initial result value.\r\n * @returns {Array} Returns the new flattened array.\r\n */\r\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\r\n  var index = -1,\r\n      length = array.length;\r\n\r\n  predicate || (predicate = isFlattenable);\r\n  result || (result = []);\r\n\r\n  while (++index < length) {\r\n    var value = array[index];\r\n    if (depth > 0 && predicate(value)) {\r\n      if (depth > 1) {\r\n        // Recursively flatten arrays (susceptible to call stack limits).\r\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\r\n      } else {\r\n        arrayPush(result, value);\r\n      }\r\n    } else if (!isStrict) {\r\n      result[result.length] = value;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nmodule.exports = baseFlatten;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/lodash/_baseFlatten.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}}],"sources":{"node_modules/lodash/_baseFlatten.js":"var arrayPush = require('./_arrayPush'),\r\n    isFlattenable = require('./_isFlattenable');\r\n\r\n/**\r\n * The base implementation of `_.flatten` with support for restricting flattening.\r\n *\r\n * @private\r\n * @param {Array} array The array to flatten.\r\n * @param {number} depth The maximum recursion depth.\r\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\r\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\r\n * @param {Array} [result=[]] The initial result value.\r\n * @returns {Array} Returns the new flattened array.\r\n */\r\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\r\n  var index = -1,\r\n      length = array.length;\r\n\r\n  predicate || (predicate = isFlattenable);\r\n  result || (result = []);\r\n\r\n  while (++index < length) {\r\n    var value = array[index];\r\n    if (depth > 0 && predicate(value)) {\r\n      if (depth > 1) {\r\n        // Recursively flatten arrays (susceptible to call stack limits).\r\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\r\n      } else {\r\n        arrayPush(result, value);\r\n      }\r\n    } else if (!isStrict) {\r\n      result[result.length] = value;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nmodule.exports = baseFlatten;\r\n"},"lineCount":39}},"error":null,"hash":"53a3c30b408fc9587e310b95a3c9ae10","cacheData":{"env":{}}}