{"id":"node_modules/lodash/_isFlattenable.js","dependencies":[{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\package.json","includedInParent":true,"mtime":1602529800556},{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1602527410817},{"name":"./_Symbol","loc":{"line":1,"column":21},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_isFlattenable.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_Symbol.js"},{"name":"./isArguments","loc":{"line":2,"column":26},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_isFlattenable.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\isArguments.js"},{"name":"./isArray","loc":{"line":3,"column":22},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\_isFlattenable.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\lodash\\isArray.js"}],"generated":{"js":"var Symbol = require('./_Symbol'),\r\n    isArguments = require('./isArguments'),\r\n    isArray = require('./isArray');\r\n\r\n/** Built-in value references. */\r\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\r\n\r\n/**\r\n * Checks if `value` is a flattenable `arguments` object or array.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\r\n */\r\nfunction isFlattenable(value) {\r\n  return isArray(value) || isArguments(value) ||\r\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\r\n}\r\n\r\nmodule.exports = isFlattenable;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/lodash/_isFlattenable.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lodash/_isFlattenable.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/lodash/_isFlattenable.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/lodash/_isFlattenable.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/lodash/_isFlattenable.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/lodash/_isFlattenable.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/lodash/_isFlattenable.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/lodash/_isFlattenable.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/lodash/_isFlattenable.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/lodash/_isFlattenable.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/lodash/_isFlattenable.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/lodash/_isFlattenable.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/lodash/_isFlattenable.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/lodash/_isFlattenable.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/lodash/_isFlattenable.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/lodash/_isFlattenable.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/lodash/_isFlattenable.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/lodash/_isFlattenable.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/lodash/_isFlattenable.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/lodash/_isFlattenable.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/lodash/_isFlattenable.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}}],"sources":{"node_modules/lodash/_isFlattenable.js":"var Symbol = require('./_Symbol'),\r\n    isArguments = require('./isArguments'),\r\n    isArray = require('./isArray');\r\n\r\n/** Built-in value references. */\r\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\r\n\r\n/**\r\n * Checks if `value` is a flattenable `arguments` object or array.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\r\n */\r\nfunction isFlattenable(value) {\r\n  return isArray(value) || isArguments(value) ||\r\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\r\n}\r\n\r\nmodule.exports = isFlattenable;\r\n"},"lineCount":21}},"error":null,"hash":"8aa25a30fe53ab7bd9e5f5284096cc6b","cacheData":{"env":{}}}