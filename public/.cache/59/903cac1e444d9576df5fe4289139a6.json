{"id":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","dependencies":[{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\package.json","includedInParent":true,"mtime":1608920885483},{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\handsontable\\package.json","includedInParent":true,"mtime":1608920885198},{"name":"core-js/modules/es.number.constructor","loc":{"line":1,"column":7},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\handsontable\\es\\i18n\\phraseFormatters\\pluralize.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\modules\\es.number.constructor.js"},{"name":"core-js/modules/es.number.is-integer","loc":{"line":2,"column":7},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\handsontable\\es\\i18n\\phraseFormatters\\pluralize.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\modules\\es.number.is-integer.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = pluralize;\n\nrequire(\"core-js/modules/es.number.constructor\");\n\nrequire(\"core-js/modules/es.number.is-integer\");\n\n/**\n * Try to choose plural form from available phrase propositions.\n *\n * @param {Array} phrasePropositions List of phrases propositions.\n * @param {number} pluralForm Number determining which phrase form should be used.\n *\n * @returns {string|Array} One particular phrase if it's possible, list of unchanged phrase propositions otherwise.\n */\nfunction pluralize(phrasePropositions, pluralForm) {\n  var isPluralizable = Array.isArray(phrasePropositions) && Number.isInteger(pluralForm);\n\n  if (isPluralizable) {\n    return phrasePropositions[pluralForm];\n  }\n\n  return phrasePropositions;\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":4,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":5,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":6,"column":0}},{"generated":{"line":15,"column":0},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":7,"column":0}},{"generated":{"line":16,"column":0},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":8,"column":0}},{"generated":{"line":17,"column":0},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":9,"column":0}},{"generated":{"line":18,"column":0},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":10,"column":0}},{"generated":{"line":19,"column":0},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":11,"column":0}},{"generated":{"line":20,"column":0},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":12,"column":15}},{"name":"pluralize","generated":{"line":20,"column":9},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":12,"column":24}},{"generated":{"line":20,"column":18},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":12,"column":15}},{"name":"phrasePropositions","generated":{"line":20,"column":19},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":12,"column":34}},{"generated":{"line":20,"column":37},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":12,"column":15}},{"name":"pluralForm","generated":{"line":20,"column":39},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":12,"column":54}},{"generated":{"line":20,"column":49},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":12,"column":15}},{"generated":{"line":20,"column":51},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":12,"column":66}},{"generated":{"line":21,"column":0},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":13,"column":2}},{"name":"isPluralizable","generated":{"line":21,"column":6},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":13,"column":6}},{"generated":{"line":21,"column":20},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":13,"column":20}},{"name":"Array","generated":{"line":21,"column":23},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":13,"column":23}},{"generated":{"line":21,"column":28},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":13,"column":28}},{"name":"isArray","generated":{"line":21,"column":29},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":13,"column":29}},{"generated":{"line":21,"column":36},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":13,"column":23}},{"name":"phrasePropositions","generated":{"line":21,"column":37},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":13,"column":37}},{"generated":{"line":21,"column":55},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":13,"column":23}},{"name":"Number","generated":{"line":21,"column":60},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":13,"column":60}},{"generated":{"line":21,"column":66},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":13,"column":66}},{"name":"isInteger","generated":{"line":21,"column":67},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":13,"column":67}},{"generated":{"line":21,"column":76},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":13,"column":60}},{"name":"pluralForm","generated":{"line":21,"column":77},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":13,"column":77}},{"generated":{"line":21,"column":87},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":13,"column":60}},{"generated":{"line":21,"column":88},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":13,"column":2}},{"generated":{"line":23,"column":0},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":15,"column":2}},{"name":"isPluralizable","generated":{"line":23,"column":6},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":15,"column":6}},{"generated":{"line":23,"column":20},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":15,"column":2}},{"generated":{"line":23,"column":22},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":15,"column":22}},{"generated":{"line":24,"column":0},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":16,"column":4}},{"name":"phrasePropositions","generated":{"line":24,"column":11},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":16,"column":11}},{"generated":{"line":24,"column":29},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":16,"column":29}},{"name":"pluralForm","generated":{"line":24,"column":30},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":16,"column":30}},{"generated":{"line":24,"column":40},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":16,"column":29}},{"generated":{"line":24,"column":41},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":16,"column":4}},{"generated":{"line":25,"column":0},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":17,"column":3}},{"generated":{"line":27,"column":0},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":19,"column":2}},{"name":"phrasePropositions","generated":{"line":27,"column":9},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":19,"column":9}},{"generated":{"line":27,"column":27},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":19,"column":2}},{"generated":{"line":28,"column":0},"source":"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js","original":{"line":20,"column":1}}],"sources":{"../node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js":"import \"core-js/modules/es.number.constructor\";\nimport \"core-js/modules/es.number.is-integer\";\n\n/**\n * Try to choose plural form from available phrase propositions.\n *\n * @param {Array} phrasePropositions List of phrases propositions.\n * @param {number} pluralForm Number determining which phrase form should be used.\n *\n * @returns {string|Array} One particular phrase if it's possible, list of unchanged phrase propositions otherwise.\n */\nexport default function pluralize(phrasePropositions, pluralForm) {\n  var isPluralizable = Array.isArray(phrasePropositions) && Number.isInteger(pluralForm);\n\n  if (isPluralizable) {\n    return phrasePropositions[pluralForm];\n  }\n\n  return phrasePropositions;\n}"},"lineCount":null}},"error":null,"hash":"49817bd82f6308b48799fe5864656959","cacheData":{"env":{}}}