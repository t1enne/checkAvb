{"id":"../node_modules/core-js/internals/to-integer.js","dependencies":[{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\package.json","includedInParent":true,"mtime":1608920885483},{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1607631999279}],"generated":{"js":"var ceil = Math.ceil;\r\nvar floor = Math.floor;\r\n\r\n// `ToInteger` abstract operation\r\n// https://tc39.github.io/ecma262/#sec-tointeger\r\nmodule.exports = function (argument) {\r\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\r\n};\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/core-js/internals/to-integer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/core-js/internals/to-integer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/core-js/internals/to-integer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/core-js/internals/to-integer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/core-js/internals/to-integer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/core-js/internals/to-integer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/core-js/internals/to-integer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/core-js/internals/to-integer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/core-js/internals/to-integer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}}],"sources":{"../node_modules/core-js/internals/to-integer.js":"var ceil = Math.ceil;\r\nvar floor = Math.floor;\r\n\r\n// `ToInteger` abstract operation\r\n// https://tc39.github.io/ecma262/#sec-tointeger\r\nmodule.exports = function (argument) {\r\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\r\n};\r\n"},"lineCount":9}},"error":null,"hash":"3fb01a3a4d76889b728ee0b709a606e6","cacheData":{"env":{}}}