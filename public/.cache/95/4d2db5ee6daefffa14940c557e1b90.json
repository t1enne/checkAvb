{"id":"../node_modules/mithril/render/hyperscriptVnode.js","dependencies":[{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\package.json","includedInParent":true,"mtime":1607193362020},{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\mithril\\package.json","includedInParent":true,"mtime":1604770194531},{"name":"../render/vnode","loc":{"line":3,"column":20},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\mithril\\render\\hyperscriptVnode.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\mithril\\render\\vnode.js"}],"generated":{"js":"\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\n\n// Call via `hyperscriptVnode.apply(startOffset, arguments)`\n//\n// The reason I do it this way, forwarding the arguments and passing the start\n// offset in `this`, is so I don't have to create a temporary array in a\n// performance-critical path.\n//\n// In native ES6, I'd instead add a final `...args` parameter to the\n// `hyperscript` and `fragment` factories and define this as\n// `hyperscriptVnode(...args)`, since modern engines do optimize that away. But\n// ES5 (what Mithril requires thanks to IE support) doesn't give me that luxury,\n// and engines aren't nearly intelligent enough to do either of these:\n//\n// 1. Elide the allocation for `[].slice.call(arguments, 1)` when it's passed to\n//    another function only to be indexed.\n// 2. Elide an `arguments` allocation when it's passed to any function other\n//    than `Function.prototype.apply` or `Reflect.apply`.\n//\n// In ES6, it'd probably look closer to this (I'd need to profile it, though):\n// module.exports = function(attrs, ...children) {\n//     if (attrs == null || typeof attrs === \"object\" && attrs.tag == null && !Array.isArray(attrs)) {\n//         if (children.length === 1 && Array.isArray(children[0])) children = children[0]\n//     } else {\n//         children = children.length === 0 && Array.isArray(attrs) ? attrs : [attrs, ...children]\n//         attrs = undefined\n//     }\n//\n//     if (attrs == null) attrs = {}\n//     return Vnode(\"\", attrs.key, attrs, children)\n// }\nmodule.exports = function() {\n\tvar attrs = arguments[this], start = this + 1, children\n\n\tif (attrs == null) {\n\t\tattrs = {}\n\t} else if (typeof attrs !== \"object\" || attrs.tag != null || Array.isArray(attrs)) {\n\t\tattrs = {}\n\t\tstart = this\n\t}\n\n\tif (arguments.length === start + 1) {\n\t\tchildren = arguments[start]\n\t\tif (!Array.isArray(children)) children = [children]\n\t} else {\n\t\tchildren = []\n\t\twhile (start < arguments.length) children.push(arguments[start++])\n\t}\n\n\treturn Vnode(\"\", attrs.key, attrs, children)\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/mithril/render/hyperscriptVnode.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}}],"sources":{"../node_modules/mithril/render/hyperscriptVnode.js":"\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\n\n// Call via `hyperscriptVnode.apply(startOffset, arguments)`\n//\n// The reason I do it this way, forwarding the arguments and passing the start\n// offset in `this`, is so I don't have to create a temporary array in a\n// performance-critical path.\n//\n// In native ES6, I'd instead add a final `...args` parameter to the\n// `hyperscript` and `fragment` factories and define this as\n// `hyperscriptVnode(...args)`, since modern engines do optimize that away. But\n// ES5 (what Mithril requires thanks to IE support) doesn't give me that luxury,\n// and engines aren't nearly intelligent enough to do either of these:\n//\n// 1. Elide the allocation for `[].slice.call(arguments, 1)` when it's passed to\n//    another function only to be indexed.\n// 2. Elide an `arguments` allocation when it's passed to any function other\n//    than `Function.prototype.apply` or `Reflect.apply`.\n//\n// In ES6, it'd probably look closer to this (I'd need to profile it, though):\n// module.exports = function(attrs, ...children) {\n//     if (attrs == null || typeof attrs === \"object\" && attrs.tag == null && !Array.isArray(attrs)) {\n//         if (children.length === 1 && Array.isArray(children[0])) children = children[0]\n//     } else {\n//         children = children.length === 0 && Array.isArray(attrs) ? attrs : [attrs, ...children]\n//         attrs = undefined\n//     }\n//\n//     if (attrs == null) attrs = {}\n//     return Vnode(\"\", attrs.key, attrs, children)\n// }\nmodule.exports = function() {\n\tvar attrs = arguments[this], start = this + 1, children\n\n\tif (attrs == null) {\n\t\tattrs = {}\n\t} else if (typeof attrs !== \"object\" || attrs.tag != null || Array.isArray(attrs)) {\n\t\tattrs = {}\n\t\tstart = this\n\t}\n\n\tif (arguments.length === start + 1) {\n\t\tchildren = arguments[start]\n\t\tif (!Array.isArray(children)) children = [children]\n\t} else {\n\t\tchildren = []\n\t\twhile (start < arguments.length) children.push(arguments[start++])\n\t}\n\n\treturn Vnode(\"\", attrs.key, attrs, children)\n}\n"},"lineCount":54}},"error":null,"hash":"aa1b416c0abee35b470b7ec93301f91a","cacheData":{"env":{}}}