{"id":"../node_modules/mithril/render/vnode.js","dependencies":[{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\package.json","includedInParent":true,"mtime":1607193362020},{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\mithril\\package.json","includedInParent":true,"mtime":1604770194531}],"generated":{"js":"\"use strict\"\n\nfunction Vnode(tag, key, attrs, children, text, dom) {\n\treturn {tag: tag, key: key, attrs: attrs, children: children, text: text, dom: dom, domSize: undefined, state: undefined, events: undefined, instance: undefined}\n}\nVnode.normalize = function(node) {\n\tif (Array.isArray(node)) return Vnode(\"[\", undefined, undefined, Vnode.normalizeChildren(node), undefined, undefined)\n\tif (node == null || typeof node === \"boolean\") return null\n\tif (typeof node === \"object\") return node\n\treturn Vnode(\"#\", undefined, undefined, String(node), undefined, undefined)\n}\nVnode.normalizeChildren = function(input) {\n\tvar children = []\n\tif (input.length) {\n\t\tvar isKeyed = input[0] != null && input[0].key != null\n\t\t// Note: this is a *very* perf-sensitive check.\n\t\t// Fun fact: merging the loop like this is somehow faster than splitting\n\t\t// it, noticeably so.\n\t\tfor (var i = 1; i < input.length; i++) {\n\t\t\tif ((input[i] != null && input[i].key != null) !== isKeyed) {\n\t\t\t\tthrow new TypeError(\"Vnodes must either always have keys or never have keys!\")\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < input.length; i++) {\n\t\t\tchildren[i] = Vnode.normalize(input[i])\n\t\t}\n\t}\n\treturn children\n}\n\nmodule.exports = Vnode\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mithril/render/vnode.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mithril/render/vnode.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}}],"sources":{"../node_modules/mithril/render/vnode.js":"\"use strict\"\n\nfunction Vnode(tag, key, attrs, children, text, dom) {\n\treturn {tag: tag, key: key, attrs: attrs, children: children, text: text, dom: dom, domSize: undefined, state: undefined, events: undefined, instance: undefined}\n}\nVnode.normalize = function(node) {\n\tif (Array.isArray(node)) return Vnode(\"[\", undefined, undefined, Vnode.normalizeChildren(node), undefined, undefined)\n\tif (node == null || typeof node === \"boolean\") return null\n\tif (typeof node === \"object\") return node\n\treturn Vnode(\"#\", undefined, undefined, String(node), undefined, undefined)\n}\nVnode.normalizeChildren = function(input) {\n\tvar children = []\n\tif (input.length) {\n\t\tvar isKeyed = input[0] != null && input[0].key != null\n\t\t// Note: this is a *very* perf-sensitive check.\n\t\t// Fun fact: merging the loop like this is somehow faster than splitting\n\t\t// it, noticeably so.\n\t\tfor (var i = 1; i < input.length; i++) {\n\t\t\tif ((input[i] != null && input[i].key != null) !== isKeyed) {\n\t\t\t\tthrow new TypeError(\"Vnodes must either always have keys or never have keys!\")\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < input.length; i++) {\n\t\t\tchildren[i] = Vnode.normalize(input[i])\n\t\t}\n\t}\n\treturn children\n}\n\nmodule.exports = Vnode\n"},"lineCount":32}},"error":null,"hash":"1679685c680c549b8e21568a7e6fe8ae","cacheData":{"env":{}}}