{"id":"../node_modules/core-js/internals/function-bind.js","dependencies":[{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\package.json","includedInParent":true,"mtime":1608920885483},{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1607631999279},{"name":"../internals/a-function","loc":{"line":2,"column":24},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\internals\\function-bind.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\internals\\a-function.js"},{"name":"../internals/is-object","loc":{"line":3,"column":23},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\internals\\function-bind.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\internals\\is-object.js"}],"generated":{"js":"'use strict';\r\nvar aFunction = require('../internals/a-function');\r\nvar isObject = require('../internals/is-object');\r\n\r\nvar slice = [].slice;\r\nvar factories = {};\r\n\r\nvar construct = function (C, argsLength, args) {\r\n  if (!(argsLength in factories)) {\r\n    for (var list = [], i = 0; i < argsLength; i++) list[i] = 'a[' + i + ']';\r\n    // eslint-disable-next-line no-new-func\r\n    factories[argsLength] = Function('C,a', 'return new C(' + list.join(',') + ')');\r\n  } return factories[argsLength](C, args);\r\n};\r\n\r\n// `Function.prototype.bind` method implementation\r\n// https://tc39.github.io/ecma262/#sec-function.prototype.bind\r\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\r\n  var fn = aFunction(this);\r\n  var partArgs = slice.call(arguments, 1);\r\n  var boundFunction = function bound(/* args... */) {\r\n    var args = partArgs.concat(slice.call(arguments));\r\n    return this instanceof boundFunction ? construct(fn, args.length, args) : fn.apply(that, args);\r\n  };\r\n  if (isObject(fn.prototype)) boundFunction.prototype = fn.prototype;\r\n  return boundFunction;\r\n};\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/core-js/internals/function-bind.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}}],"sources":{"../node_modules/core-js/internals/function-bind.js":"'use strict';\r\nvar aFunction = require('../internals/a-function');\r\nvar isObject = require('../internals/is-object');\r\n\r\nvar slice = [].slice;\r\nvar factories = {};\r\n\r\nvar construct = function (C, argsLength, args) {\r\n  if (!(argsLength in factories)) {\r\n    for (var list = [], i = 0; i < argsLength; i++) list[i] = 'a[' + i + ']';\r\n    // eslint-disable-next-line no-new-func\r\n    factories[argsLength] = Function('C,a', 'return new C(' + list.join(',') + ')');\r\n  } return factories[argsLength](C, args);\r\n};\r\n\r\n// `Function.prototype.bind` method implementation\r\n// https://tc39.github.io/ecma262/#sec-function.prototype.bind\r\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\r\n  var fn = aFunction(this);\r\n  var partArgs = slice.call(arguments, 1);\r\n  var boundFunction = function bound(/* args... */) {\r\n    var args = partArgs.concat(slice.call(arguments));\r\n    return this instanceof boundFunction ? construct(fn, args.length, args) : fn.apply(that, args);\r\n  };\r\n  if (isObject(fn.prototype)) boundFunction.prototype = fn.prototype;\r\n  return boundFunction;\r\n};\r\n"},"lineCount":28}},"error":null,"hash":"9a5ee1b01cd1165d6e1363ce4a44b752","cacheData":{"env":{}}}