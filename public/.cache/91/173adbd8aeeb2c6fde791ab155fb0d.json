{"id":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","dependencies":[{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\package.json","includedInParent":true,"mtime":1608920885483},{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1607631999279},{"name":"../modules/es.regexp.exec","loc":{"line":3,"column":8},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\internals\\fix-regexp-well-known-symbol-logic.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\modules\\es.regexp.exec.js"},{"name":"../internals/redefine","loc":{"line":4,"column":23},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\internals\\fix-regexp-well-known-symbol-logic.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\internals\\redefine.js"},{"name":"../internals/fails","loc":{"line":5,"column":20},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\internals\\fix-regexp-well-known-symbol-logic.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\internals\\fails.js"},{"name":"../internals/well-known-symbol","loc":{"line":6,"column":30},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\internals\\fix-regexp-well-known-symbol-logic.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\internals\\well-known-symbol.js"},{"name":"../internals/regexp-exec","loc":{"line":7,"column":25},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\internals\\fix-regexp-well-known-symbol-logic.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\internals\\regexp-exec.js"},{"name":"../internals/create-non-enumerable-property","loc":{"line":8,"column":42},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\internals\\fix-regexp-well-known-symbol-logic.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\internals\\create-non-enumerable-property.js"}],"generated":{"js":"'use strict';\r\n// TODO: Remove from `core-js@4` since it's moved to entry points\r\nrequire('../modules/es.regexp.exec');\r\nvar redefine = require('../internals/redefine');\r\nvar fails = require('../internals/fails');\r\nvar wellKnownSymbol = require('../internals/well-known-symbol');\r\nvar regexpExec = require('../internals/regexp-exec');\r\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\r\n\r\nvar SPECIES = wellKnownSymbol('species');\r\n\r\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\r\n  // #replace needs built-in support for named groups.\r\n  // #match works fine because it just return the exec results, even if it has\r\n  // a \"grops\" property.\r\n  var re = /./;\r\n  re.exec = function () {\r\n    var result = [];\r\n    result.groups = { a: '7' };\r\n    return result;\r\n  };\r\n  return ''.replace(re, '$<a>') !== '7';\r\n});\r\n\r\n// IE <= 11 replaces $0 with the whole match, as if it was $&\r\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\r\nvar REPLACE_KEEPS_$0 = (function () {\r\n  return 'a'.replace(/./, '$0') === '$0';\r\n})();\r\n\r\nvar REPLACE = wellKnownSymbol('replace');\r\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\r\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\r\n  if (/./[REPLACE]) {\r\n    return /./[REPLACE]('a', '$0') === '';\r\n  }\r\n  return false;\r\n})();\r\n\r\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\r\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\r\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\r\n  var re = /(?:)/;\r\n  var originalExec = re.exec;\r\n  re.exec = function () { return originalExec.apply(this, arguments); };\r\n  var result = 'ab'.split(re);\r\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\r\n});\r\n\r\nmodule.exports = function (KEY, length, exec, sham) {\r\n  var SYMBOL = wellKnownSymbol(KEY);\r\n\r\n  var DELEGATES_TO_SYMBOL = !fails(function () {\r\n    // String methods call symbol-named RegEp methods\r\n    var O = {};\r\n    O[SYMBOL] = function () { return 7; };\r\n    return ''[KEY](O) != 7;\r\n  });\r\n\r\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\r\n    // Symbol-named RegExp methods call .exec\r\n    var execCalled = false;\r\n    var re = /a/;\r\n\r\n    if (KEY === 'split') {\r\n      // We can't use real regex here since it causes deoptimization\r\n      // and serious performance degradation in V8\r\n      // https://github.com/zloirock/core-js/issues/306\r\n      re = {};\r\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\r\n      // a new one. We need to return the patched regex when creating the new one.\r\n      re.constructor = {};\r\n      re.constructor[SPECIES] = function () { return re; };\r\n      re.flags = '';\r\n      re[SYMBOL] = /./[SYMBOL];\r\n    }\r\n\r\n    re.exec = function () { execCalled = true; return null; };\r\n\r\n    re[SYMBOL]('');\r\n    return !execCalled;\r\n  });\r\n\r\n  if (\r\n    !DELEGATES_TO_SYMBOL ||\r\n    !DELEGATES_TO_EXEC ||\r\n    (KEY === 'replace' && !(\r\n      REPLACE_SUPPORTS_NAMED_GROUPS &&\r\n      REPLACE_KEEPS_$0 &&\r\n      !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\r\n    )) ||\r\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\r\n  ) {\r\n    var nativeRegExpMethod = /./[SYMBOL];\r\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\r\n      if (regexp.exec === regexpExec) {\r\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\r\n          // The native String method already delegates to @@method (this\r\n          // polyfilled function), leasing to infinite recursion.\r\n          // We avoid it by directly calling the native @@method method.\r\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\r\n        }\r\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\r\n      }\r\n      return { done: false };\r\n    }, {\r\n      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,\r\n      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\r\n    });\r\n    var stringMethod = methods[0];\r\n    var regexMethod = methods[1];\r\n\r\n    redefine(String.prototype, KEY, stringMethod);\r\n    redefine(RegExp.prototype, SYMBOL, length == 2\r\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\r\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\r\n      ? function (string, arg) { return regexMethod.call(string, this, arg); }\r\n      // 21.2.5.6 RegExp.prototype[@@match](string)\r\n      // 21.2.5.9 RegExp.prototype[@@search](string)\r\n      : function (string) { return regexMethod.call(string, this); }\r\n    );\r\n  }\r\n\r\n  if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);\r\n};\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}}],"sources":{"../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js":"'use strict';\r\n// TODO: Remove from `core-js@4` since it's moved to entry points\r\nrequire('../modules/es.regexp.exec');\r\nvar redefine = require('../internals/redefine');\r\nvar fails = require('../internals/fails');\r\nvar wellKnownSymbol = require('../internals/well-known-symbol');\r\nvar regexpExec = require('../internals/regexp-exec');\r\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\r\n\r\nvar SPECIES = wellKnownSymbol('species');\r\n\r\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\r\n  // #replace needs built-in support for named groups.\r\n  // #match works fine because it just return the exec results, even if it has\r\n  // a \"grops\" property.\r\n  var re = /./;\r\n  re.exec = function () {\r\n    var result = [];\r\n    result.groups = { a: '7' };\r\n    return result;\r\n  };\r\n  return ''.replace(re, '$<a>') !== '7';\r\n});\r\n\r\n// IE <= 11 replaces $0 with the whole match, as if it was $&\r\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\r\nvar REPLACE_KEEPS_$0 = (function () {\r\n  return 'a'.replace(/./, '$0') === '$0';\r\n})();\r\n\r\nvar REPLACE = wellKnownSymbol('replace');\r\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\r\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\r\n  if (/./[REPLACE]) {\r\n    return /./[REPLACE]('a', '$0') === '';\r\n  }\r\n  return false;\r\n})();\r\n\r\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\r\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\r\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\r\n  var re = /(?:)/;\r\n  var originalExec = re.exec;\r\n  re.exec = function () { return originalExec.apply(this, arguments); };\r\n  var result = 'ab'.split(re);\r\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\r\n});\r\n\r\nmodule.exports = function (KEY, length, exec, sham) {\r\n  var SYMBOL = wellKnownSymbol(KEY);\r\n\r\n  var DELEGATES_TO_SYMBOL = !fails(function () {\r\n    // String methods call symbol-named RegEp methods\r\n    var O = {};\r\n    O[SYMBOL] = function () { return 7; };\r\n    return ''[KEY](O) != 7;\r\n  });\r\n\r\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\r\n    // Symbol-named RegExp methods call .exec\r\n    var execCalled = false;\r\n    var re = /a/;\r\n\r\n    if (KEY === 'split') {\r\n      // We can't use real regex here since it causes deoptimization\r\n      // and serious performance degradation in V8\r\n      // https://github.com/zloirock/core-js/issues/306\r\n      re = {};\r\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\r\n      // a new one. We need to return the patched regex when creating the new one.\r\n      re.constructor = {};\r\n      re.constructor[SPECIES] = function () { return re; };\r\n      re.flags = '';\r\n      re[SYMBOL] = /./[SYMBOL];\r\n    }\r\n\r\n    re.exec = function () { execCalled = true; return null; };\r\n\r\n    re[SYMBOL]('');\r\n    return !execCalled;\r\n  });\r\n\r\n  if (\r\n    !DELEGATES_TO_SYMBOL ||\r\n    !DELEGATES_TO_EXEC ||\r\n    (KEY === 'replace' && !(\r\n      REPLACE_SUPPORTS_NAMED_GROUPS &&\r\n      REPLACE_KEEPS_$0 &&\r\n      !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\r\n    )) ||\r\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\r\n  ) {\r\n    var nativeRegExpMethod = /./[SYMBOL];\r\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\r\n      if (regexp.exec === regexpExec) {\r\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\r\n          // The native String method already delegates to @@method (this\r\n          // polyfilled function), leasing to infinite recursion.\r\n          // We avoid it by directly calling the native @@method method.\r\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\r\n        }\r\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\r\n      }\r\n      return { done: false };\r\n    }, {\r\n      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,\r\n      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\r\n    });\r\n    var stringMethod = methods[0];\r\n    var regexMethod = methods[1];\r\n\r\n    redefine(String.prototype, KEY, stringMethod);\r\n    redefine(RegExp.prototype, SYMBOL, length == 2\r\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\r\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\r\n      ? function (string, arg) { return regexMethod.call(string, this, arg); }\r\n      // 21.2.5.6 RegExp.prototype[@@match](string)\r\n      // 21.2.5.9 RegExp.prototype[@@search](string)\r\n      : function (string) { return regexMethod.call(string, this); }\r\n    );\r\n  }\r\n\r\n  if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);\r\n};\r\n"},"lineCount":126}},"error":null,"hash":"6faafef75f0f85d239cbb53e60b5ab01","cacheData":{"env":{}}}