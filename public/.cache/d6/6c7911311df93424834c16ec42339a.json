{"id":"../node_modules/mithril/promise/polyfill.js","dependencies":[{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\package.json","includedInParent":true,"mtime":1607632450647},{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\mithril\\package.json","includedInParent":true,"mtime":1607632000077}],"generated":{"js":"\"use strict\"\r\n/** @constructor */\r\nvar PromisePolyfill = function(executor) {\r\n\tif (!(this instanceof PromisePolyfill)) throw new Error(\"Promise must be called with `new`\")\r\n\tif (typeof executor !== \"function\") throw new TypeError(\"executor must be a function\")\r\n\r\n\tvar self = this, resolvers = [], rejectors = [], resolveCurrent = handler(resolvers, true), rejectCurrent = handler(rejectors, false)\r\n\tvar instance = self._instance = {resolvers: resolvers, rejectors: rejectors}\r\n\tvar callAsync = typeof setImmediate === \"function\" ? setImmediate : setTimeout\r\n\tfunction handler(list, shouldAbsorb) {\r\n\t\treturn function execute(value) {\r\n\t\t\tvar then\r\n\t\t\ttry {\r\n\t\t\t\tif (shouldAbsorb && value != null && (typeof value === \"object\" || typeof value === \"function\") && typeof (then = value.then) === \"function\") {\r\n\t\t\t\t\tif (value === self) throw new TypeError(\"Promise can't be resolved w/ itself\")\r\n\t\t\t\t\texecuteOnce(then.bind(value))\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcallAsync(function() {\r\n\t\t\t\t\t\tif (!shouldAbsorb && list.length === 0) console.error(\"Possible unhandled promise rejection:\", value)\r\n\t\t\t\t\t\tfor (var i = 0; i < list.length; i++) list[i](value)\r\n\t\t\t\t\t\tresolvers.length = 0, rejectors.length = 0\r\n\t\t\t\t\t\tinstance.state = shouldAbsorb\r\n\t\t\t\t\t\tinstance.retry = function() {execute(value)}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\trejectCurrent(e)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfunction executeOnce(then) {\r\n\t\tvar runs = 0\r\n\t\tfunction run(fn) {\r\n\t\t\treturn function(value) {\r\n\t\t\t\tif (runs++ > 0) return\r\n\t\t\t\tfn(value)\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar onerror = run(rejectCurrent)\r\n\t\ttry {then(run(resolveCurrent), onerror)} catch (e) {onerror(e)}\r\n\t}\r\n\r\n\texecuteOnce(executor)\r\n}\r\nPromisePolyfill.prototype.then = function(onFulfilled, onRejection) {\r\n\tvar self = this, instance = self._instance\r\n\tfunction handle(callback, list, next, state) {\r\n\t\tlist.push(function(value) {\r\n\t\t\tif (typeof callback !== \"function\") next(value)\r\n\t\t\telse try {resolveNext(callback(value))} catch (e) {if (rejectNext) rejectNext(e)}\r\n\t\t})\r\n\t\tif (typeof instance.retry === \"function\" && state === instance.state) instance.retry()\r\n\t}\r\n\tvar resolveNext, rejectNext\r\n\tvar promise = new PromisePolyfill(function(resolve, reject) {resolveNext = resolve, rejectNext = reject})\r\n\thandle(onFulfilled, instance.resolvers, resolveNext, true), handle(onRejection, instance.rejectors, rejectNext, false)\r\n\treturn promise\r\n}\r\nPromisePolyfill.prototype.catch = function(onRejection) {\r\n\treturn this.then(null, onRejection)\r\n}\r\nPromisePolyfill.prototype.finally = function(callback) {\r\n\treturn this.then(\r\n\t\tfunction(value) {\r\n\t\t\treturn PromisePolyfill.resolve(callback()).then(function() {\r\n\t\t\t\treturn value\r\n\t\t\t})\r\n\t\t},\r\n\t\tfunction(reason) {\r\n\t\t\treturn PromisePolyfill.resolve(callback()).then(function() {\r\n\t\t\t\treturn PromisePolyfill.reject(reason);\r\n\t\t\t})\r\n\t\t}\r\n\t)\r\n}\r\nPromisePolyfill.resolve = function(value) {\r\n\tif (value instanceof PromisePolyfill) return value\r\n\treturn new PromisePolyfill(function(resolve) {resolve(value)})\r\n}\r\nPromisePolyfill.reject = function(value) {\r\n\treturn new PromisePolyfill(function(resolve, reject) {reject(value)})\r\n}\r\nPromisePolyfill.all = function(list) {\r\n\treturn new PromisePolyfill(function(resolve, reject) {\r\n\t\tvar total = list.length, count = 0, values = []\r\n\t\tif (list.length === 0) resolve([])\r\n\t\telse for (var i = 0; i < list.length; i++) {\r\n\t\t\t(function(i) {\r\n\t\t\t\tfunction consume(value) {\r\n\t\t\t\t\tcount++\r\n\t\t\t\t\tvalues[i] = value\r\n\t\t\t\t\tif (count === total) resolve(values)\r\n\t\t\t\t}\r\n\t\t\t\tif (list[i] != null && (typeof list[i] === \"object\" || typeof list[i] === \"function\") && typeof list[i].then === \"function\") {\r\n\t\t\t\t\tlist[i].then(consume, reject)\r\n\t\t\t\t}\r\n\t\t\t\telse consume(list[i])\r\n\t\t\t})(i)\r\n\t\t}\r\n\t})\r\n}\r\nPromisePolyfill.race = function(list) {\r\n\treturn new PromisePolyfill(function(resolve, reject) {\r\n\t\tfor (var i = 0; i < list.length; i++) {\r\n\t\t\tlist[i].then(resolve, reject)\r\n\t\t}\r\n\t})\r\n}\r\n\r\nmodule.exports = PromisePolyfill\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/mithril/promise/polyfill.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}}],"sources":{"../node_modules/mithril/promise/polyfill.js":"\"use strict\"\r\n/** @constructor */\r\nvar PromisePolyfill = function(executor) {\r\n\tif (!(this instanceof PromisePolyfill)) throw new Error(\"Promise must be called with `new`\")\r\n\tif (typeof executor !== \"function\") throw new TypeError(\"executor must be a function\")\r\n\r\n\tvar self = this, resolvers = [], rejectors = [], resolveCurrent = handler(resolvers, true), rejectCurrent = handler(rejectors, false)\r\n\tvar instance = self._instance = {resolvers: resolvers, rejectors: rejectors}\r\n\tvar callAsync = typeof setImmediate === \"function\" ? setImmediate : setTimeout\r\n\tfunction handler(list, shouldAbsorb) {\r\n\t\treturn function execute(value) {\r\n\t\t\tvar then\r\n\t\t\ttry {\r\n\t\t\t\tif (shouldAbsorb && value != null && (typeof value === \"object\" || typeof value === \"function\") && typeof (then = value.then) === \"function\") {\r\n\t\t\t\t\tif (value === self) throw new TypeError(\"Promise can't be resolved w/ itself\")\r\n\t\t\t\t\texecuteOnce(then.bind(value))\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcallAsync(function() {\r\n\t\t\t\t\t\tif (!shouldAbsorb && list.length === 0) console.error(\"Possible unhandled promise rejection:\", value)\r\n\t\t\t\t\t\tfor (var i = 0; i < list.length; i++) list[i](value)\r\n\t\t\t\t\t\tresolvers.length = 0, rejectors.length = 0\r\n\t\t\t\t\t\tinstance.state = shouldAbsorb\r\n\t\t\t\t\t\tinstance.retry = function() {execute(value)}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\trejectCurrent(e)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfunction executeOnce(then) {\r\n\t\tvar runs = 0\r\n\t\tfunction run(fn) {\r\n\t\t\treturn function(value) {\r\n\t\t\t\tif (runs++ > 0) return\r\n\t\t\t\tfn(value)\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar onerror = run(rejectCurrent)\r\n\t\ttry {then(run(resolveCurrent), onerror)} catch (e) {onerror(e)}\r\n\t}\r\n\r\n\texecuteOnce(executor)\r\n}\r\nPromisePolyfill.prototype.then = function(onFulfilled, onRejection) {\r\n\tvar self = this, instance = self._instance\r\n\tfunction handle(callback, list, next, state) {\r\n\t\tlist.push(function(value) {\r\n\t\t\tif (typeof callback !== \"function\") next(value)\r\n\t\t\telse try {resolveNext(callback(value))} catch (e) {if (rejectNext) rejectNext(e)}\r\n\t\t})\r\n\t\tif (typeof instance.retry === \"function\" && state === instance.state) instance.retry()\r\n\t}\r\n\tvar resolveNext, rejectNext\r\n\tvar promise = new PromisePolyfill(function(resolve, reject) {resolveNext = resolve, rejectNext = reject})\r\n\thandle(onFulfilled, instance.resolvers, resolveNext, true), handle(onRejection, instance.rejectors, rejectNext, false)\r\n\treturn promise\r\n}\r\nPromisePolyfill.prototype.catch = function(onRejection) {\r\n\treturn this.then(null, onRejection)\r\n}\r\nPromisePolyfill.prototype.finally = function(callback) {\r\n\treturn this.then(\r\n\t\tfunction(value) {\r\n\t\t\treturn PromisePolyfill.resolve(callback()).then(function() {\r\n\t\t\t\treturn value\r\n\t\t\t})\r\n\t\t},\r\n\t\tfunction(reason) {\r\n\t\t\treturn PromisePolyfill.resolve(callback()).then(function() {\r\n\t\t\t\treturn PromisePolyfill.reject(reason);\r\n\t\t\t})\r\n\t\t}\r\n\t)\r\n}\r\nPromisePolyfill.resolve = function(value) {\r\n\tif (value instanceof PromisePolyfill) return value\r\n\treturn new PromisePolyfill(function(resolve) {resolve(value)})\r\n}\r\nPromisePolyfill.reject = function(value) {\r\n\treturn new PromisePolyfill(function(resolve, reject) {reject(value)})\r\n}\r\nPromisePolyfill.all = function(list) {\r\n\treturn new PromisePolyfill(function(resolve, reject) {\r\n\t\tvar total = list.length, count = 0, values = []\r\n\t\tif (list.length === 0) resolve([])\r\n\t\telse for (var i = 0; i < list.length; i++) {\r\n\t\t\t(function(i) {\r\n\t\t\t\tfunction consume(value) {\r\n\t\t\t\t\tcount++\r\n\t\t\t\t\tvalues[i] = value\r\n\t\t\t\t\tif (count === total) resolve(values)\r\n\t\t\t\t}\r\n\t\t\t\tif (list[i] != null && (typeof list[i] === \"object\" || typeof list[i] === \"function\") && typeof list[i].then === \"function\") {\r\n\t\t\t\t\tlist[i].then(consume, reject)\r\n\t\t\t\t}\r\n\t\t\t\telse consume(list[i])\r\n\t\t\t})(i)\r\n\t\t}\r\n\t})\r\n}\r\nPromisePolyfill.race = function(list) {\r\n\treturn new PromisePolyfill(function(resolve, reject) {\r\n\t\tfor (var i = 0; i < list.length; i++) {\r\n\t\t\tlist[i].then(resolve, reject)\r\n\t\t}\r\n\t})\r\n}\r\n\r\nmodule.exports = PromisePolyfill\r\n"},"lineCount":113}},"error":null,"hash":"c4e1ba9bacf7a4dc39170af5dc066bfb","cacheData":{"env":{}}}