{"id":"../node_modules/core-js/internals/object-set-prototype-of.js","dependencies":[{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\package.json","includedInParent":true,"mtime":1608920885483},{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1607631999279},{"name":"../internals/an-object","loc":{"line":1,"column":23},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\internals\\object-set-prototype-of.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\internals\\an-object.js"},{"name":"../internals/a-possible-prototype","loc":{"line":2,"column":33},"parent":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\internals\\object-set-prototype-of.js","resolved":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\core-js\\internals\\a-possible-prototype.js"}],"generated":{"js":"var anObject = require('../internals/an-object');\r\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\r\n\r\n// `Object.setPrototypeOf` method\r\n// https://tc39.github.io/ecma262/#sec-object.setprototypeof\r\n// Works with __proto__ only. Old v8 can't work with null proto objects.\r\n/* eslint-disable no-proto */\r\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\r\n  var CORRECT_SETTER = false;\r\n  var test = {};\r\n  var setter;\r\n  try {\r\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\r\n    setter.call(test, []);\r\n    CORRECT_SETTER = test instanceof Array;\r\n  } catch (error) { /* empty */ }\r\n  return function setPrototypeOf(O, proto) {\r\n    anObject(O);\r\n    aPossiblePrototype(proto);\r\n    if (CORRECT_SETTER) setter.call(O, proto);\r\n    else O.__proto__ = proto;\r\n    return O;\r\n  };\r\n}() : undefined);\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/core-js/internals/object-set-prototype-of.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/core-js/internals/object-set-prototype-of.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/core-js/internals/object-set-prototype-of.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/core-js/internals/object-set-prototype-of.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/core-js/internals/object-set-prototype-of.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/core-js/internals/object-set-prototype-of.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/core-js/internals/object-set-prototype-of.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/core-js/internals/object-set-prototype-of.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/core-js/internals/object-set-prototype-of.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/core-js/internals/object-set-prototype-of.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/core-js/internals/object-set-prototype-of.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/core-js/internals/object-set-prototype-of.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/core-js/internals/object-set-prototype-of.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/core-js/internals/object-set-prototype-of.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/core-js/internals/object-set-prototype-of.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/core-js/internals/object-set-prototype-of.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/core-js/internals/object-set-prototype-of.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/core-js/internals/object-set-prototype-of.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/core-js/internals/object-set-prototype-of.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/core-js/internals/object-set-prototype-of.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/core-js/internals/object-set-prototype-of.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/core-js/internals/object-set-prototype-of.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/core-js/internals/object-set-prototype-of.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/core-js/internals/object-set-prototype-of.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/core-js/internals/object-set-prototype-of.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}}],"sources":{"../node_modules/core-js/internals/object-set-prototype-of.js":"var anObject = require('../internals/an-object');\r\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\r\n\r\n// `Object.setPrototypeOf` method\r\n// https://tc39.github.io/ecma262/#sec-object.setprototypeof\r\n// Works with __proto__ only. Old v8 can't work with null proto objects.\r\n/* eslint-disable no-proto */\r\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\r\n  var CORRECT_SETTER = false;\r\n  var test = {};\r\n  var setter;\r\n  try {\r\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\r\n    setter.call(test, []);\r\n    CORRECT_SETTER = test instanceof Array;\r\n  } catch (error) { /* empty */ }\r\n  return function setPrototypeOf(O, proto) {\r\n    anObject(O);\r\n    aPossiblePrototype(proto);\r\n    if (CORRECT_SETTER) setter.call(O, proto);\r\n    else O.__proto__ = proto;\r\n    return O;\r\n  };\r\n}() : undefined);\r\n"},"lineCount":25}},"error":null,"hash":"d7ea38ccd41fce6ca38ec6f757ab4957","cacheData":{"env":{}}}