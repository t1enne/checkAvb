{"id":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","dependencies":[{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\package.json","includedInParent":true,"mtime":1608920885483},{"name":"C:\\Users\\990555\\Desktop\\tornado\\checkAvb\\node_modules\\handsontable\\package.json","includedInParent":true,"mtime":1608920885198}],"generated":{"js":"/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * json-patch-duplex.js version: 0.5.7\n * (c) 2013 Joachim Wester\n * MIT license\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OriginalError = Error;\nvar jsonpatch;\n(function (jsonpatch) {\n    var _objectKeys = function (obj) {\n        if (_isArray(obj)) {\n            var keys = new Array(obj.length);\n            for (var k = 0; k < keys.length; k++) {\n                keys[k] = \"\" + k;\n            }\n            return keys;\n        }\n        if (Object.keys) {\n            return Object.keys(obj);\n        }\n        var keys = [];\n        for (var i in obj) {\n            if (obj.hasOwnProperty(i)) {\n                keys.push(i);\n            }\n        }\n        return keys;\n    };\n    function _equals(a, b) {\n        switch (typeof a) {\n            case 'undefined': //backward compatibility, but really I think we should return false\n            case 'boolean':\n            case 'string':\n            case 'number':\n                return a === b;\n            case 'object':\n                if (a === null)\n                    return b === null;\n                if (_isArray(a)) {\n                    if (!_isArray(b) || a.length !== b.length)\n                        return false;\n                    for (var i = 0, l = a.length; i < l; i++)\n                        if (!_equals(a[i], b[i]))\n                            return false;\n                    return true;\n                }\n                var bKeys = _objectKeys(b);\n                var bLength = bKeys.length;\n                if (_objectKeys(a).length !== bLength)\n                    return false;\n                for (var i = 0; i < bLength; i++)\n                    if (!_equals(a[i], b[i]))\n                        return false;\n                return true;\n            default:\n                return false;\n        }\n    }\n    /* We use a Javascript hash to store each\n     function. Each hash entry (property) uses\n     the operation identifiers specified in rfc6902.\n     In this way, we can map each patch operation\n     to its dedicated function in efficient way.\n     */\n    /* The operations applicable to an object */\n    var objOps = {\n        add: function (obj, key) {\n            obj[key] = this.value;\n            return true;\n        },\n        remove: function (obj, key) {\n            delete obj[key];\n            return true;\n        },\n        replace: function (obj, key) {\n            obj[key] = this.value;\n            return true;\n        },\n        move: function (obj, key, tree) {\n            var temp = { op: \"_get\", path: this.from };\n            apply(tree, [temp]);\n            apply(tree, [\n                { op: \"remove\", path: this.from }\n            ]);\n            apply(tree, [\n                { op: \"add\", path: this.path, value: temp.value }\n            ]);\n            return true;\n        },\n        copy: function (obj, key, tree) {\n            var temp = { op: \"_get\", path: this.from };\n            apply(tree, [temp]);\n            apply(tree, [\n                { op: \"add\", path: this.path, value: temp.value }\n            ]);\n            return true;\n        },\n        test: function (obj, key) {\n            return _equals(obj[key], this.value);\n        },\n        _get: function (obj, key) {\n            this.value = obj[key];\n        }\n    };\n    /* The operations applicable to an array. Many are the same as for the object */\n    var arrOps = {\n        add: function (arr, i) {\n            arr.splice(i, 0, this.value);\n            return true;\n        },\n        remove: function (arr, i) {\n            arr.splice(i, 1);\n            return true;\n        },\n        replace: function (arr, i) {\n            arr[i] = this.value;\n            return true;\n        },\n        move: objOps.move,\n        copy: objOps.copy,\n        test: objOps.test,\n        _get: objOps._get\n    };\n    /* The operations applicable to object root. Many are the same as for the object */\n    var rootOps = {\n        add: function (obj) {\n            rootOps.remove.call(this, obj);\n            for (var key in this.value) {\n                if (this.value.hasOwnProperty(key)) {\n                    obj[key] = this.value[key];\n                }\n            }\n            return true;\n        },\n        remove: function (obj) {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    objOps.remove.call(this, obj, key);\n                }\n            }\n            return true;\n        },\n        replace: function (obj) {\n            apply(obj, [\n                { op: \"remove\", path: this.path }\n            ]);\n            apply(obj, [\n                { op: \"add\", path: this.path, value: this.value }\n            ]);\n            return true;\n        },\n        move: objOps.move,\n        copy: objOps.copy,\n        test: function (obj) {\n            return (JSON.stringify(obj) === JSON.stringify(this.value));\n        },\n        _get: function (obj) {\n            this.value = obj;\n        }\n    };\n    var observeOps = {\n        add: function (patches, path) {\n            var patch = {\n                op: \"add\",\n                path: path + escapePathComponent(this.name),\n                value: this.object[this.name] };\n            patches.push(patch);\n        },\n        'delete': function (patches, path) {\n            var patch = {\n                op: \"remove\",\n                path: path + escapePathComponent(this.name)\n            };\n            patches.push(patch);\n        },\n        update: function (patches, path) {\n            var patch = {\n                op: \"replace\",\n                path: path + escapePathComponent(this.name),\n                value: this.object[this.name]\n            };\n            patches.push(patch);\n        }\n    };\n    function escapePathComponent(str) {\n        if (str.indexOf('/') === -1 && str.indexOf('~') === -1)\n            return str;\n        return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n    }\n    function _getPathRecursive(root, obj) {\n        var found;\n        for (var key in root) {\n            if (root.hasOwnProperty(key)) {\n                if (root[key] === obj) {\n                    return escapePathComponent(key) + '/';\n                }\n                else if (typeof root[key] === 'object') {\n                    found = _getPathRecursive(root[key], obj);\n                    if (found != '') {\n                        return escapePathComponent(key) + '/' + found;\n                    }\n                }\n            }\n        }\n        return '';\n    }\n    function getPath(root, obj) {\n        if (root === obj) {\n            return '/';\n        }\n        var path = _getPathRecursive(root, obj);\n        if (path === '') {\n            throw new OriginalError(\"Object not found in root\");\n        }\n        return '/' + path;\n    }\n    var beforeDict = [];\n    var Mirror = (function () {\n        function Mirror(obj) {\n            this.observers = [];\n            this.obj = obj;\n        }\n        return Mirror;\n    })();\n    var ObserverInfo = (function () {\n        function ObserverInfo(callback, observer) {\n            this.callback = callback;\n            this.observer = observer;\n        }\n        return ObserverInfo;\n    })();\n    function getMirror(obj) {\n        for (var i = 0, ilen = beforeDict.length; i < ilen; i++) {\n            if (beforeDict[i].obj === obj) {\n                return beforeDict[i];\n            }\n        }\n    }\n    function getObserverFromMirror(mirror, callback) {\n        for (var j = 0, jlen = mirror.observers.length; j < jlen; j++) {\n            if (mirror.observers[j].callback === callback) {\n                return mirror.observers[j].observer;\n            }\n        }\n    }\n    function removeObserverFromMirror(mirror, observer) {\n        for (var j = 0, jlen = mirror.observers.length; j < jlen; j++) {\n            if (mirror.observers[j].observer === observer) {\n                mirror.observers.splice(j, 1);\n                return;\n            }\n        }\n    }\n    function unobserve(root, observer) {\n        observer.unobserve();\n    }\n    jsonpatch.unobserve = unobserve;\n    function deepClone(obj) {\n        if (typeof obj === \"object\") {\n            return JSON.parse(JSON.stringify(obj)); //Faster than ES5 clone - http://jsperf.com/deep-cloning-of-objects/5\n        }\n        else {\n            return obj; //no need to clone primitives\n        }\n    }\n    function observe(obj, callback) {\n        var patches = [];\n        var root = obj;\n        var observer;\n        var mirror = getMirror(obj);\n        if (!mirror) {\n            mirror = new Mirror(obj);\n            beforeDict.push(mirror);\n        }\n        else {\n            observer = getObserverFromMirror(mirror, callback);\n        }\n        if (observer) {\n            return observer;\n        }\n        observer = {};\n        mirror.value = deepClone(obj);\n        if (callback) {\n            observer.callback = callback;\n            observer.next = null;\n            var intervals = this.intervals || [100, 1000, 10000, 60000];\n            if (intervals.push === void 0) {\n                throw new OriginalError(\"jsonpatch.intervals must be an array\");\n            }\n            var currentInterval = 0;\n            var dirtyCheck = function () {\n                generate(observer);\n            };\n            var fastCheck = function () {\n                clearTimeout(observer.next);\n                observer.next = setTimeout(function () {\n                    dirtyCheck();\n                    currentInterval = 0;\n                    observer.next = setTimeout(slowCheck, intervals[currentInterval++]);\n                }, 0);\n            };\n            var slowCheck = function () {\n                dirtyCheck();\n                if (currentInterval == intervals.length)\n                    currentInterval = intervals.length - 1;\n                observer.next = setTimeout(slowCheck, intervals[currentInterval++]);\n            };\n            if (typeof window !== 'undefined') {\n                if (window.addEventListener) {\n                    window.addEventListener('mousedown', fastCheck);\n                    window.addEventListener('mouseup', fastCheck);\n                    window.addEventListener('keydown', fastCheck);\n                }\n                else {\n                    document.documentElement.attachEvent('onmousedown', fastCheck);\n                    document.documentElement.attachEvent('onmouseup', fastCheck);\n                    document.documentElement.attachEvent('onkeydown', fastCheck);\n                }\n            }\n            observer.next = setTimeout(slowCheck, intervals[currentInterval++]);\n        }\n        observer.patches = patches;\n        observer.object = obj;\n        observer.unobserve = function () {\n            generate(observer);\n            clearTimeout(observer.next);\n            removeObserverFromMirror(mirror, observer);\n            if (mirror.observers.length === 0) {\n                beforeDict.splice(beforeDict.indexOf(mirror), 1);\n            }\n            if (typeof window !== 'undefined') {\n                if (window.removeEventListener) {\n                    window.removeEventListener('mousedown', fastCheck);\n                    window.removeEventListener('mouseup', fastCheck);\n                    window.removeEventListener('keydown', fastCheck);\n                }\n                else {\n                    document.documentElement.detachEvent('onmousedown', fastCheck);\n                    document.documentElement.detachEvent('onmouseup', fastCheck);\n                    document.documentElement.detachEvent('onkeydown', fastCheck);\n                }\n            }\n        };\n        mirror.observers.push(new ObserverInfo(callback, observer));\n        return observer;\n    }\n    jsonpatch.observe = observe;\n    function generate(observer) {\n        var mirror;\n        for (var i = 0, ilen = beforeDict.length; i < ilen; i++) {\n            if (beforeDict[i].obj === observer.object) {\n                mirror = beforeDict[i];\n                break;\n            }\n        }\n        _generate(mirror.value, observer.object, observer.patches, \"\");\n        if (observer.patches.length) {\n            apply(mirror.value, observer.patches);\n        }\n        var temp = observer.patches;\n        if (temp.length > 0) {\n            observer.patches = [];\n            if (observer.callback) {\n                observer.callback(temp);\n            }\n        }\n        return temp;\n    }\n    jsonpatch.generate = generate;\n    // Dirty check if obj is different from mirror, generate patches and update mirror\n    function _generate(mirror, obj, patches, path) {\n        var newKeys = _objectKeys(obj);\n        var oldKeys = _objectKeys(mirror);\n        var changed = false;\n        var deleted = false;\n        //if ever \"move\" operation is implemented here, make sure this test runs OK: \"should not generate the same patch twice (move)\"\n        for (var t = oldKeys.length - 1; t >= 0; t--) {\n            var key = oldKeys[t];\n            var oldVal = mirror[key];\n            if (obj.hasOwnProperty(key)) {\n                var newVal = obj[key];\n                if (typeof oldVal == \"object\" && oldVal != null && typeof newVal == \"object\" && newVal != null) {\n                    _generate(oldVal, newVal, patches, path + \"/\" + escapePathComponent(key));\n                }\n                else {\n                    if (oldVal != newVal) {\n                        changed = true;\n                        patches.push({ op: \"replace\", path: path + \"/\" + escapePathComponent(key), value: deepClone(newVal) });\n                    }\n                }\n            }\n            else {\n                patches.push({ op: \"remove\", path: path + \"/\" + escapePathComponent(key) });\n                deleted = true; // property has been deleted\n            }\n        }\n        if (!deleted && newKeys.length == oldKeys.length) {\n            return;\n        }\n        for (var t = 0; t < newKeys.length; t++) {\n            var key = newKeys[t];\n            if (!mirror.hasOwnProperty(key)) {\n                patches.push({ op: \"add\", path: path + \"/\" + escapePathComponent(key), value: deepClone(obj[key]) });\n            }\n        }\n    }\n    var _isArray;\n    if (Array.isArray) {\n        _isArray = Array.isArray;\n    }\n    else {\n        _isArray = function (obj) {\n            return obj.push && typeof obj.length === 'number';\n        };\n    }\n    //3x faster than cached /^\\d+$/.test(str)\n    function isInteger(str) {\n        var i = 0;\n        var len = str.length;\n        var charCode;\n        while (i < len) {\n            charCode = str.charCodeAt(i);\n            if (charCode >= 48 && charCode <= 57) {\n                i++;\n                continue;\n            }\n            return false;\n        }\n        return true;\n    }\n    /// Apply a json-patch operation on an object tree\n    function apply(tree, patches, validate) {\n        var result = false, p = 0, plen = patches.length, patch, key;\n        while (p < plen) {\n            patch = patches[p];\n            p++;\n            // Find the object\n            var path = patch.path || \"\";\n            var keys = path.split('/');\n            var obj = tree;\n            var t = 1; //skip empty element - http://jsperf.com/to-shift-or-not-to-shift\n            var len = keys.length;\n            var existingPathFragment = undefined;\n            while (true) {\n                key = keys[t];\n                if (validate) {\n                    if (existingPathFragment === undefined) {\n                        if (obj[key] === undefined) {\n                            existingPathFragment = keys.slice(0, t).join('/');\n                        }\n                        else if (t == len - 1) {\n                            existingPathFragment = patch.path;\n                        }\n                        if (existingPathFragment !== undefined) {\n                            this.validator(patch, p - 1, tree, existingPathFragment);\n                        }\n                    }\n                }\n                t++;\n                if (key === undefined) {\n                    if (t >= len) {\n                        result = rootOps[patch.op].call(patch, obj, key, tree); // Apply patch\n                        break;\n                    }\n                }\n                if (_isArray(obj)) {\n                    if (key === '-') {\n                        key = obj.length;\n                    }\n                    else {\n                        if (validate && !isInteger(key)) {\n                            throw new JsonPatchError(\"Expected an unsigned base-10 integer value, making the new referenced value the array element with the zero-based index\", \"OPERATION_PATH_ILLEGAL_ARRAY_INDEX\", p - 1, patch.path, patch);\n                        }\n                        key = parseInt(key, 10);\n                    }\n                    if (t >= len) {\n                        if (validate && patch.op === \"add\" && key > obj.length) {\n                            throw new JsonPatchError(\"The specified index MUST NOT be greater than the number of elements in the array\", \"OPERATION_VALUE_OUT_OF_BOUNDS\", p - 1, patch.path, patch);\n                        }\n                        result = arrOps[patch.op].call(patch, obj, key, tree); // Apply patch\n                        break;\n                    }\n                }\n                else {\n                    if (key && key.indexOf('~') != -1)\n                        key = key.replace(/~1/g, '/').replace(/~0/g, '~'); // escape chars\n                    if (t >= len) {\n                        result = objOps[patch.op].call(patch, obj, key, tree); // Apply patch\n                        break;\n                    }\n                }\n                obj = obj[key];\n            }\n        }\n        return result;\n    }\n    jsonpatch.apply = apply;\n    function compare(tree1, tree2) {\n        var patches = [];\n        _generate(tree1, tree2, patches, '');\n        return patches;\n    }\n    jsonpatch.compare = compare;\n    var JsonPatchError = (function (_super) {\n        __extends(JsonPatchError, _super);\n        function JsonPatchError(message, name, index, operation, tree) {\n            _super.call(this, message);\n            this.message = message;\n            this.name = name;\n            this.index = index;\n            this.operation = operation;\n            this.tree = tree;\n        }\n        return JsonPatchError;\n    })(OriginalError);\n    jsonpatch.JsonPatchError = JsonPatchError;\n    jsonpatch.Error = JsonPatchError;\n    /**\n     * Recursively checks whether an object has any undefined values inside.\n     */\n    function hasUndefined(obj) {\n        if (obj === undefined) {\n            return true;\n        }\n        if (typeof obj == \"array\" || typeof obj == \"object\") {\n            for (var i in obj) {\n                if (hasUndefined(obj[i])) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Validates a single operation. Called from `jsonpatch.validate`. Throws `JsonPatchError` in case of an error.\n     * @param {object} operation - operation object (patch)\n     * @param {number} index - index of operation in the sequence\n     * @param {object} [tree] - object where the operation is supposed to be applied\n     * @param {string} [existingPathFragment] - comes along with `tree`\n     */\n    function validator(operation, index, tree, existingPathFragment) {\n        if (typeof operation !== 'object' || operation === null || _isArray(operation)) {\n            throw new JsonPatchError('Operation is not an object', 'OPERATION_NOT_AN_OBJECT', index, operation, tree);\n        }\n        else if (!objOps[operation.op]) {\n            throw new JsonPatchError('Operation `op` property is not one of operations defined in RFC-6902', 'OPERATION_OP_INVALID', index, operation, tree);\n        }\n        else if (typeof operation.path !== 'string') {\n            throw new JsonPatchError('Operation `path` property is not a string', 'OPERATION_PATH_INVALID', index, operation, tree);\n        }\n        else if ((operation.op === 'move' || operation.op === 'copy') && typeof operation.from !== 'string') {\n            throw new JsonPatchError('Operation `from` property is not present (applicable in `move` and `copy` operations)', 'OPERATION_FROM_REQUIRED', index, operation, tree);\n        }\n        else if ((operation.op === 'add' || operation.op === 'replace' || operation.op === 'test') && operation.value === undefined) {\n            throw new JsonPatchError('Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)', 'OPERATION_VALUE_REQUIRED', index, operation, tree);\n        }\n        else if ((operation.op === 'add' || operation.op === 'replace' || operation.op === 'test') && hasUndefined(operation.value)) {\n            throw new JsonPatchError('Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)', 'OPERATION_VALUE_CANNOT_CONTAIN_UNDEFINED', index, operation, tree);\n        }\n        else if (tree) {\n            if (operation.op == \"add\") {\n                var pathLen = operation.path.split(\"/\").length;\n                var existingPathLen = existingPathFragment.split(\"/\").length;\n                if (pathLen !== existingPathLen + 1 && pathLen !== existingPathLen) {\n                    throw new JsonPatchError('Cannot perform an `add` operation at the desired path', 'OPERATION_PATH_CANNOT_ADD', index, operation, tree);\n                }\n            }\n            else if (operation.op === 'replace' || operation.op === 'remove' || operation.op === '_get') {\n                if (operation.path !== existingPathFragment) {\n                    throw new JsonPatchError('Cannot perform the operation at a path that does not exist', 'OPERATION_PATH_UNRESOLVABLE', index, operation, tree);\n                }\n            }\n            else if (operation.op === 'move' || operation.op === 'copy') {\n                var existingValue = { op: \"_get\", path: operation.from, value: undefined };\n                var error = jsonpatch.validate([existingValue], tree);\n                if (error && error.name === 'OPERATION_PATH_UNRESOLVABLE') {\n                    throw new JsonPatchError('Cannot perform the operation from a path that does not exist', 'OPERATION_FROM_UNRESOLVABLE', index, operation, tree);\n                }\n            }\n        }\n    }\n    jsonpatch.validator = validator;\n    /**\n     * Validates a sequence of operations. If `tree` parameter is provided, the sequence is additionally validated against the object tree.\n     * If error is encountered, returns a JsonPatchError object\n     * @param sequence\n     * @param tree\n     * @returns {JsonPatchError|undefined}\n     */\n    function validate(sequence, tree) {\n        try {\n            if (!_isArray(sequence)) {\n                throw new JsonPatchError('Patch sequence must be an array', 'SEQUENCE_NOT_AN_ARRAY');\n            }\n            if (tree) {\n                tree = JSON.parse(JSON.stringify(tree)); //clone tree so that we can safely try applying operations\n                apply.call(this, tree, sequence, true);\n            }\n            else {\n                for (var i = 0; i < sequence.length; i++) {\n                    this.validator(sequence[i], i);\n                }\n            }\n        }\n        catch (e) {\n            if (e instanceof JsonPatchError) {\n                return e;\n            }\n            else {\n                throw e;\n            }\n        }\n    }\n    jsonpatch.validate = validate;\n})(jsonpatch || (jsonpatch = {}));\nif (typeof exports !== \"undefined\") {\n    exports.apply = jsonpatch.apply;\n    exports.observe = jsonpatch.observe;\n    exports.unobserve = jsonpatch.unobserve;\n    exports.generate = jsonpatch.generate;\n    exports.compare = jsonpatch.compare;\n    exports.validate = jsonpatch.validate;\n    exports.validator = jsonpatch.validator;\n    exports.JsonPatchError = jsonpatch.JsonPatchError;\n    exports.Error = jsonpatch.Error;\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}}],"sources":{"../node_modules/handsontable/lib/jsonpatch/json-patch-duplex.js":"/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * json-patch-duplex.js version: 0.5.7\n * (c) 2013 Joachim Wester\n * MIT license\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OriginalError = Error;\nvar jsonpatch;\n(function (jsonpatch) {\n    var _objectKeys = function (obj) {\n        if (_isArray(obj)) {\n            var keys = new Array(obj.length);\n            for (var k = 0; k < keys.length; k++) {\n                keys[k] = \"\" + k;\n            }\n            return keys;\n        }\n        if (Object.keys) {\n            return Object.keys(obj);\n        }\n        var keys = [];\n        for (var i in obj) {\n            if (obj.hasOwnProperty(i)) {\n                keys.push(i);\n            }\n        }\n        return keys;\n    };\n    function _equals(a, b) {\n        switch (typeof a) {\n            case 'undefined': //backward compatibility, but really I think we should return false\n            case 'boolean':\n            case 'string':\n            case 'number':\n                return a === b;\n            case 'object':\n                if (a === null)\n                    return b === null;\n                if (_isArray(a)) {\n                    if (!_isArray(b) || a.length !== b.length)\n                        return false;\n                    for (var i = 0, l = a.length; i < l; i++)\n                        if (!_equals(a[i], b[i]))\n                            return false;\n                    return true;\n                }\n                var bKeys = _objectKeys(b);\n                var bLength = bKeys.length;\n                if (_objectKeys(a).length !== bLength)\n                    return false;\n                for (var i = 0; i < bLength; i++)\n                    if (!_equals(a[i], b[i]))\n                        return false;\n                return true;\n            default:\n                return false;\n        }\n    }\n    /* We use a Javascript hash to store each\n     function. Each hash entry (property) uses\n     the operation identifiers specified in rfc6902.\n     In this way, we can map each patch operation\n     to its dedicated function in efficient way.\n     */\n    /* The operations applicable to an object */\n    var objOps = {\n        add: function (obj, key) {\n            obj[key] = this.value;\n            return true;\n        },\n        remove: function (obj, key) {\n            delete obj[key];\n            return true;\n        },\n        replace: function (obj, key) {\n            obj[key] = this.value;\n            return true;\n        },\n        move: function (obj, key, tree) {\n            var temp = { op: \"_get\", path: this.from };\n            apply(tree, [temp]);\n            apply(tree, [\n                { op: \"remove\", path: this.from }\n            ]);\n            apply(tree, [\n                { op: \"add\", path: this.path, value: temp.value }\n            ]);\n            return true;\n        },\n        copy: function (obj, key, tree) {\n            var temp = { op: \"_get\", path: this.from };\n            apply(tree, [temp]);\n            apply(tree, [\n                { op: \"add\", path: this.path, value: temp.value }\n            ]);\n            return true;\n        },\n        test: function (obj, key) {\n            return _equals(obj[key], this.value);\n        },\n        _get: function (obj, key) {\n            this.value = obj[key];\n        }\n    };\n    /* The operations applicable to an array. Many are the same as for the object */\n    var arrOps = {\n        add: function (arr, i) {\n            arr.splice(i, 0, this.value);\n            return true;\n        },\n        remove: function (arr, i) {\n            arr.splice(i, 1);\n            return true;\n        },\n        replace: function (arr, i) {\n            arr[i] = this.value;\n            return true;\n        },\n        move: objOps.move,\n        copy: objOps.copy,\n        test: objOps.test,\n        _get: objOps._get\n    };\n    /* The operations applicable to object root. Many are the same as for the object */\n    var rootOps = {\n        add: function (obj) {\n            rootOps.remove.call(this, obj);\n            for (var key in this.value) {\n                if (this.value.hasOwnProperty(key)) {\n                    obj[key] = this.value[key];\n                }\n            }\n            return true;\n        },\n        remove: function (obj) {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    objOps.remove.call(this, obj, key);\n                }\n            }\n            return true;\n        },\n        replace: function (obj) {\n            apply(obj, [\n                { op: \"remove\", path: this.path }\n            ]);\n            apply(obj, [\n                { op: \"add\", path: this.path, value: this.value }\n            ]);\n            return true;\n        },\n        move: objOps.move,\n        copy: objOps.copy,\n        test: function (obj) {\n            return (JSON.stringify(obj) === JSON.stringify(this.value));\n        },\n        _get: function (obj) {\n            this.value = obj;\n        }\n    };\n    var observeOps = {\n        add: function (patches, path) {\n            var patch = {\n                op: \"add\",\n                path: path + escapePathComponent(this.name),\n                value: this.object[this.name] };\n            patches.push(patch);\n        },\n        'delete': function (patches, path) {\n            var patch = {\n                op: \"remove\",\n                path: path + escapePathComponent(this.name)\n            };\n            patches.push(patch);\n        },\n        update: function (patches, path) {\n            var patch = {\n                op: \"replace\",\n                path: path + escapePathComponent(this.name),\n                value: this.object[this.name]\n            };\n            patches.push(patch);\n        }\n    };\n    function escapePathComponent(str) {\n        if (str.indexOf('/') === -1 && str.indexOf('~') === -1)\n            return str;\n        return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n    }\n    function _getPathRecursive(root, obj) {\n        var found;\n        for (var key in root) {\n            if (root.hasOwnProperty(key)) {\n                if (root[key] === obj) {\n                    return escapePathComponent(key) + '/';\n                }\n                else if (typeof root[key] === 'object') {\n                    found = _getPathRecursive(root[key], obj);\n                    if (found != '') {\n                        return escapePathComponent(key) + '/' + found;\n                    }\n                }\n            }\n        }\n        return '';\n    }\n    function getPath(root, obj) {\n        if (root === obj) {\n            return '/';\n        }\n        var path = _getPathRecursive(root, obj);\n        if (path === '') {\n            throw new OriginalError(\"Object not found in root\");\n        }\n        return '/' + path;\n    }\n    var beforeDict = [];\n    var Mirror = (function () {\n        function Mirror(obj) {\n            this.observers = [];\n            this.obj = obj;\n        }\n        return Mirror;\n    })();\n    var ObserverInfo = (function () {\n        function ObserverInfo(callback, observer) {\n            this.callback = callback;\n            this.observer = observer;\n        }\n        return ObserverInfo;\n    })();\n    function getMirror(obj) {\n        for (var i = 0, ilen = beforeDict.length; i < ilen; i++) {\n            if (beforeDict[i].obj === obj) {\n                return beforeDict[i];\n            }\n        }\n    }\n    function getObserverFromMirror(mirror, callback) {\n        for (var j = 0, jlen = mirror.observers.length; j < jlen; j++) {\n            if (mirror.observers[j].callback === callback) {\n                return mirror.observers[j].observer;\n            }\n        }\n    }\n    function removeObserverFromMirror(mirror, observer) {\n        for (var j = 0, jlen = mirror.observers.length; j < jlen; j++) {\n            if (mirror.observers[j].observer === observer) {\n                mirror.observers.splice(j, 1);\n                return;\n            }\n        }\n    }\n    function unobserve(root, observer) {\n        observer.unobserve();\n    }\n    jsonpatch.unobserve = unobserve;\n    function deepClone(obj) {\n        if (typeof obj === \"object\") {\n            return JSON.parse(JSON.stringify(obj)); //Faster than ES5 clone - http://jsperf.com/deep-cloning-of-objects/5\n        }\n        else {\n            return obj; //no need to clone primitives\n        }\n    }\n    function observe(obj, callback) {\n        var patches = [];\n        var root = obj;\n        var observer;\n        var mirror = getMirror(obj);\n        if (!mirror) {\n            mirror = new Mirror(obj);\n            beforeDict.push(mirror);\n        }\n        else {\n            observer = getObserverFromMirror(mirror, callback);\n        }\n        if (observer) {\n            return observer;\n        }\n        observer = {};\n        mirror.value = deepClone(obj);\n        if (callback) {\n            observer.callback = callback;\n            observer.next = null;\n            var intervals = this.intervals || [100, 1000, 10000, 60000];\n            if (intervals.push === void 0) {\n                throw new OriginalError(\"jsonpatch.intervals must be an array\");\n            }\n            var currentInterval = 0;\n            var dirtyCheck = function () {\n                generate(observer);\n            };\n            var fastCheck = function () {\n                clearTimeout(observer.next);\n                observer.next = setTimeout(function () {\n                    dirtyCheck();\n                    currentInterval = 0;\n                    observer.next = setTimeout(slowCheck, intervals[currentInterval++]);\n                }, 0);\n            };\n            var slowCheck = function () {\n                dirtyCheck();\n                if (currentInterval == intervals.length)\n                    currentInterval = intervals.length - 1;\n                observer.next = setTimeout(slowCheck, intervals[currentInterval++]);\n            };\n            if (typeof window !== 'undefined') {\n                if (window.addEventListener) {\n                    window.addEventListener('mousedown', fastCheck);\n                    window.addEventListener('mouseup', fastCheck);\n                    window.addEventListener('keydown', fastCheck);\n                }\n                else {\n                    document.documentElement.attachEvent('onmousedown', fastCheck);\n                    document.documentElement.attachEvent('onmouseup', fastCheck);\n                    document.documentElement.attachEvent('onkeydown', fastCheck);\n                }\n            }\n            observer.next = setTimeout(slowCheck, intervals[currentInterval++]);\n        }\n        observer.patches = patches;\n        observer.object = obj;\n        observer.unobserve = function () {\n            generate(observer);\n            clearTimeout(observer.next);\n            removeObserverFromMirror(mirror, observer);\n            if (mirror.observers.length === 0) {\n                beforeDict.splice(beforeDict.indexOf(mirror), 1);\n            }\n            if (typeof window !== 'undefined') {\n                if (window.removeEventListener) {\n                    window.removeEventListener('mousedown', fastCheck);\n                    window.removeEventListener('mouseup', fastCheck);\n                    window.removeEventListener('keydown', fastCheck);\n                }\n                else {\n                    document.documentElement.detachEvent('onmousedown', fastCheck);\n                    document.documentElement.detachEvent('onmouseup', fastCheck);\n                    document.documentElement.detachEvent('onkeydown', fastCheck);\n                }\n            }\n        };\n        mirror.observers.push(new ObserverInfo(callback, observer));\n        return observer;\n    }\n    jsonpatch.observe = observe;\n    function generate(observer) {\n        var mirror;\n        for (var i = 0, ilen = beforeDict.length; i < ilen; i++) {\n            if (beforeDict[i].obj === observer.object) {\n                mirror = beforeDict[i];\n                break;\n            }\n        }\n        _generate(mirror.value, observer.object, observer.patches, \"\");\n        if (observer.patches.length) {\n            apply(mirror.value, observer.patches);\n        }\n        var temp = observer.patches;\n        if (temp.length > 0) {\n            observer.patches = [];\n            if (observer.callback) {\n                observer.callback(temp);\n            }\n        }\n        return temp;\n    }\n    jsonpatch.generate = generate;\n    // Dirty check if obj is different from mirror, generate patches and update mirror\n    function _generate(mirror, obj, patches, path) {\n        var newKeys = _objectKeys(obj);\n        var oldKeys = _objectKeys(mirror);\n        var changed = false;\n        var deleted = false;\n        //if ever \"move\" operation is implemented here, make sure this test runs OK: \"should not generate the same patch twice (move)\"\n        for (var t = oldKeys.length - 1; t >= 0; t--) {\n            var key = oldKeys[t];\n            var oldVal = mirror[key];\n            if (obj.hasOwnProperty(key)) {\n                var newVal = obj[key];\n                if (typeof oldVal == \"object\" && oldVal != null && typeof newVal == \"object\" && newVal != null) {\n                    _generate(oldVal, newVal, patches, path + \"/\" + escapePathComponent(key));\n                }\n                else {\n                    if (oldVal != newVal) {\n                        changed = true;\n                        patches.push({ op: \"replace\", path: path + \"/\" + escapePathComponent(key), value: deepClone(newVal) });\n                    }\n                }\n            }\n            else {\n                patches.push({ op: \"remove\", path: path + \"/\" + escapePathComponent(key) });\n                deleted = true; // property has been deleted\n            }\n        }\n        if (!deleted && newKeys.length == oldKeys.length) {\n            return;\n        }\n        for (var t = 0; t < newKeys.length; t++) {\n            var key = newKeys[t];\n            if (!mirror.hasOwnProperty(key)) {\n                patches.push({ op: \"add\", path: path + \"/\" + escapePathComponent(key), value: deepClone(obj[key]) });\n            }\n        }\n    }\n    var _isArray;\n    if (Array.isArray) {\n        _isArray = Array.isArray;\n    }\n    else {\n        _isArray = function (obj) {\n            return obj.push && typeof obj.length === 'number';\n        };\n    }\n    //3x faster than cached /^\\d+$/.test(str)\n    function isInteger(str) {\n        var i = 0;\n        var len = str.length;\n        var charCode;\n        while (i < len) {\n            charCode = str.charCodeAt(i);\n            if (charCode >= 48 && charCode <= 57) {\n                i++;\n                continue;\n            }\n            return false;\n        }\n        return true;\n    }\n    /// Apply a json-patch operation on an object tree\n    function apply(tree, patches, validate) {\n        var result = false, p = 0, plen = patches.length, patch, key;\n        while (p < plen) {\n            patch = patches[p];\n            p++;\n            // Find the object\n            var path = patch.path || \"\";\n            var keys = path.split('/');\n            var obj = tree;\n            var t = 1; //skip empty element - http://jsperf.com/to-shift-or-not-to-shift\n            var len = keys.length;\n            var existingPathFragment = undefined;\n            while (true) {\n                key = keys[t];\n                if (validate) {\n                    if (existingPathFragment === undefined) {\n                        if (obj[key] === undefined) {\n                            existingPathFragment = keys.slice(0, t).join('/');\n                        }\n                        else if (t == len - 1) {\n                            existingPathFragment = patch.path;\n                        }\n                        if (existingPathFragment !== undefined) {\n                            this.validator(patch, p - 1, tree, existingPathFragment);\n                        }\n                    }\n                }\n                t++;\n                if (key === undefined) {\n                    if (t >= len) {\n                        result = rootOps[patch.op].call(patch, obj, key, tree); // Apply patch\n                        break;\n                    }\n                }\n                if (_isArray(obj)) {\n                    if (key === '-') {\n                        key = obj.length;\n                    }\n                    else {\n                        if (validate && !isInteger(key)) {\n                            throw new JsonPatchError(\"Expected an unsigned base-10 integer value, making the new referenced value the array element with the zero-based index\", \"OPERATION_PATH_ILLEGAL_ARRAY_INDEX\", p - 1, patch.path, patch);\n                        }\n                        key = parseInt(key, 10);\n                    }\n                    if (t >= len) {\n                        if (validate && patch.op === \"add\" && key > obj.length) {\n                            throw new JsonPatchError(\"The specified index MUST NOT be greater than the number of elements in the array\", \"OPERATION_VALUE_OUT_OF_BOUNDS\", p - 1, patch.path, patch);\n                        }\n                        result = arrOps[patch.op].call(patch, obj, key, tree); // Apply patch\n                        break;\n                    }\n                }\n                else {\n                    if (key && key.indexOf('~') != -1)\n                        key = key.replace(/~1/g, '/').replace(/~0/g, '~'); // escape chars\n                    if (t >= len) {\n                        result = objOps[patch.op].call(patch, obj, key, tree); // Apply patch\n                        break;\n                    }\n                }\n                obj = obj[key];\n            }\n        }\n        return result;\n    }\n    jsonpatch.apply = apply;\n    function compare(tree1, tree2) {\n        var patches = [];\n        _generate(tree1, tree2, patches, '');\n        return patches;\n    }\n    jsonpatch.compare = compare;\n    var JsonPatchError = (function (_super) {\n        __extends(JsonPatchError, _super);\n        function JsonPatchError(message, name, index, operation, tree) {\n            _super.call(this, message);\n            this.message = message;\n            this.name = name;\n            this.index = index;\n            this.operation = operation;\n            this.tree = tree;\n        }\n        return JsonPatchError;\n    })(OriginalError);\n    jsonpatch.JsonPatchError = JsonPatchError;\n    jsonpatch.Error = JsonPatchError;\n    /**\n     * Recursively checks whether an object has any undefined values inside.\n     */\n    function hasUndefined(obj) {\n        if (obj === undefined) {\n            return true;\n        }\n        if (typeof obj == \"array\" || typeof obj == \"object\") {\n            for (var i in obj) {\n                if (hasUndefined(obj[i])) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Validates a single operation. Called from `jsonpatch.validate`. Throws `JsonPatchError` in case of an error.\n     * @param {object} operation - operation object (patch)\n     * @param {number} index - index of operation in the sequence\n     * @param {object} [tree] - object where the operation is supposed to be applied\n     * @param {string} [existingPathFragment] - comes along with `tree`\n     */\n    function validator(operation, index, tree, existingPathFragment) {\n        if (typeof operation !== 'object' || operation === null || _isArray(operation)) {\n            throw new JsonPatchError('Operation is not an object', 'OPERATION_NOT_AN_OBJECT', index, operation, tree);\n        }\n        else if (!objOps[operation.op]) {\n            throw new JsonPatchError('Operation `op` property is not one of operations defined in RFC-6902', 'OPERATION_OP_INVALID', index, operation, tree);\n        }\n        else if (typeof operation.path !== 'string') {\n            throw new JsonPatchError('Operation `path` property is not a string', 'OPERATION_PATH_INVALID', index, operation, tree);\n        }\n        else if ((operation.op === 'move' || operation.op === 'copy') && typeof operation.from !== 'string') {\n            throw new JsonPatchError('Operation `from` property is not present (applicable in `move` and `copy` operations)', 'OPERATION_FROM_REQUIRED', index, operation, tree);\n        }\n        else if ((operation.op === 'add' || operation.op === 'replace' || operation.op === 'test') && operation.value === undefined) {\n            throw new JsonPatchError('Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)', 'OPERATION_VALUE_REQUIRED', index, operation, tree);\n        }\n        else if ((operation.op === 'add' || operation.op === 'replace' || operation.op === 'test') && hasUndefined(operation.value)) {\n            throw new JsonPatchError('Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)', 'OPERATION_VALUE_CANNOT_CONTAIN_UNDEFINED', index, operation, tree);\n        }\n        else if (tree) {\n            if (operation.op == \"add\") {\n                var pathLen = operation.path.split(\"/\").length;\n                var existingPathLen = existingPathFragment.split(\"/\").length;\n                if (pathLen !== existingPathLen + 1 && pathLen !== existingPathLen) {\n                    throw new JsonPatchError('Cannot perform an `add` operation at the desired path', 'OPERATION_PATH_CANNOT_ADD', index, operation, tree);\n                }\n            }\n            else if (operation.op === 'replace' || operation.op === 'remove' || operation.op === '_get') {\n                if (operation.path !== existingPathFragment) {\n                    throw new JsonPatchError('Cannot perform the operation at a path that does not exist', 'OPERATION_PATH_UNRESOLVABLE', index, operation, tree);\n                }\n            }\n            else if (operation.op === 'move' || operation.op === 'copy') {\n                var existingValue = { op: \"_get\", path: operation.from, value: undefined };\n                var error = jsonpatch.validate([existingValue], tree);\n                if (error && error.name === 'OPERATION_PATH_UNRESOLVABLE') {\n                    throw new JsonPatchError('Cannot perform the operation from a path that does not exist', 'OPERATION_FROM_UNRESOLVABLE', index, operation, tree);\n                }\n            }\n        }\n    }\n    jsonpatch.validator = validator;\n    /**\n     * Validates a sequence of operations. If `tree` parameter is provided, the sequence is additionally validated against the object tree.\n     * If error is encountered, returns a JsonPatchError object\n     * @param sequence\n     * @param tree\n     * @returns {JsonPatchError|undefined}\n     */\n    function validate(sequence, tree) {\n        try {\n            if (!_isArray(sequence)) {\n                throw new JsonPatchError('Patch sequence must be an array', 'SEQUENCE_NOT_AN_ARRAY');\n            }\n            if (tree) {\n                tree = JSON.parse(JSON.stringify(tree)); //clone tree so that we can safely try applying operations\n                apply.call(this, tree, sequence, true);\n            }\n            else {\n                for (var i = 0; i < sequence.length; i++) {\n                    this.validator(sequence[i], i);\n                }\n            }\n        }\n        catch (e) {\n            if (e instanceof JsonPatchError) {\n                return e;\n            }\n            else {\n                throw e;\n            }\n        }\n    }\n    jsonpatch.validate = validate;\n})(jsonpatch || (jsonpatch = {}));\nif (typeof exports !== \"undefined\") {\n    exports.apply = jsonpatch.apply;\n    exports.observe = jsonpatch.observe;\n    exports.unobserve = jsonpatch.unobserve;\n    exports.generate = jsonpatch.generate;\n    exports.compare = jsonpatch.compare;\n    exports.validate = jsonpatch.validate;\n    exports.validator = jsonpatch.validator;\n    exports.JsonPatchError = jsonpatch.JsonPatchError;\n    exports.Error = jsonpatch.Error;\n}\n"},"lineCount":632}},"error":null,"hash":"f3a35559516ddae808acb22f8c435fa5","cacheData":{"env":{}}}